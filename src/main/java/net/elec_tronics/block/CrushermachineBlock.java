
package net.elec_tronics.block;

import net.minecraftforge.network.NetworkHooks;

import net.minecraft.world.phys.shapes.VoxelShape;
import net.minecraft.world.phys.shapes.Shapes;
import net.minecraft.world.phys.shapes.CollisionContext;
import net.minecraft.world.phys.BlockHitResult;
import net.minecraft.world.level.storage.loot.LootContext;
import net.minecraft.world.level.material.Material;
import net.minecraft.world.level.block.state.properties.DirectionProperty;
import net.minecraft.world.level.block.state.StateDefinition;
import net.minecraft.world.level.block.state.BlockState;
import net.minecraft.world.level.block.state.BlockBehaviour;
import net.minecraft.world.level.block.entity.BlockEntity;
import net.minecraft.world.level.block.SoundType;
import net.minecraft.world.level.block.Rotation;
import net.minecraft.world.level.block.Mirror;
import net.minecraft.world.level.block.HorizontalDirectionalBlock;
import net.minecraft.world.level.block.EntityBlock;
import net.minecraft.world.level.block.Block;
import net.minecraft.world.level.Level;
import net.minecraft.world.level.BlockGetter;
import net.minecraft.world.item.context.BlockPlaceContext;
import net.minecraft.world.item.PickaxeItem;
import net.minecraft.world.item.ItemStack;
import net.minecraft.world.inventory.AbstractContainerMenu;
import net.minecraft.world.entity.player.Player;
import net.minecraft.world.entity.player.Inventory;
import net.minecraft.world.MenuProvider;
import net.minecraft.world.InteractionResult;
import net.minecraft.world.InteractionHand;
import net.minecraft.world.Containers;
import net.minecraft.util.RandomSource;
import net.minecraft.server.level.ServerPlayer;
import net.minecraft.server.level.ServerLevel;
import net.minecraft.network.chat.Component;
import net.minecraft.network.FriendlyByteBuf;
import net.minecraft.core.Direction;
import net.minecraft.core.BlockPos;

import net.elec_tronics.world.inventory.CrusherT1GUIMenu;
import net.elec_tronics.procedures.CrusherT1procedureProcedure;
import net.elec_tronics.block.entity.CrushermachineBlockEntity;

import java.util.List;
import java.util.Collections;

import io.netty.buffer.Unpooled;

public class CrushermachineBlock extends Block implements EntityBlock {
	public static final DirectionProperty FACING = HorizontalDirectionalBlock.FACING;

	public CrushermachineBlock() {
		super(BlockBehaviour.Properties.of(Material.METAL).sound(SoundType.METAL).strength(4f, 10f).requiresCorrectToolForDrops().noOcclusion().isRedstoneConductor((bs, br, bp) -> false));
		this.registerDefaultState(this.stateDefinition.any().setValue(FACING, Direction.NORTH));
	}

	@Override
	public boolean propagatesSkylightDown(BlockState state, BlockGetter reader, BlockPos pos) {
		return true;
	}

	@Override
	public int getLightBlock(BlockState state, BlockGetter worldIn, BlockPos pos) {
		return 0;
	}

	@Override
	public VoxelShape getVisualShape(BlockState state, BlockGetter world, BlockPos pos, CollisionContext context) {
		return Shapes.empty();
	}

	@Override
	public VoxelShape getShape(BlockState state, BlockGetter world, BlockPos pos, CollisionContext context) {
		return switch (state.getValue(FACING)) {
			default -> Shapes.or(box(14.45, 13.76, 6.28, 15.31, 15.48, 9.72), box(0.69, 15.05, 6.28, 15.31, 15.91, 9.72), box(0.69, 13.76, 6.28, 1.55, 15.48, 9.72), box(1.12, 0, 1.12, 14.88, 0.86, 14.88),
					box(5.42, -0.64723, 5.42114, 5.85, 2.79277, 5.85114), box(5.85, -0.81923, 4.99114, 6.28, 2.62077, 5.42114), box(9.72, -0.81923, 4.99114, 10.15, 2.62077, 5.42114), box(4.56, -0.30323, 6.28114, 4.99, 3.13677, 6.71114),
					box(11.44, -0.13123, 6.71114, 11.87, 3.30877, 7.14114), box(4.13, -0.13123, 6.71114, 4.56, 3.30877, 7.14114), box(10.58, -0.47523, 5.85114, 11.01, 2.96477, 6.28114), box(10.29574, -0.69305, 5.42, 10.72574, 2.74695, 5.85),
					box(9.86574, -0.52105, 10.58, 10.29574, 2.91895, 11.01), box(9.86574, -0.52105, 4.99, 10.29574, 2.91895, 5.42), box(9.00574, -0.17705, 11.44, 9.43574, 3.26295, 11.87), box(10.58, -0.67232, 9.86985, 11.01, 2.76768, 10.29985),
					box(9.43574, -0.34905, 4.56, 9.86574, 3.09095, 4.99), box(10.15, -0.84432, 10.29985, 10.58, 2.59568, 10.72985), box(9.43574, -0.34905, 11.01, 9.86574, 3.09095, 11.44), box(9.00574, -0.17705, 4.13, 9.43574, 3.26295, 4.56),
					box(5.85, -1.01632, 10.72985, 6.28, 2.42368, 11.15986), box(4.99, -0.67232, 9.86985, 5.42, 2.76768, 10.29985), box(11.01, -0.50032, 9.43985, 11.44, 2.93968, 9.86985), box(9.72, -1.01632, 10.72985, 10.15, 2.42368, 11.15986),
					box(11.01, -0.30323, 6.28114, 11.44, 3.13677, 6.71114), box(5.32893, -0.65107, 5.42, 5.75893, 2.78893, 5.85), box(4.13, -0.32832, 9.00985, 4.56, 3.11168, 9.43985), box(11.44, -0.32832, 9.00985, 11.87, 3.11168, 9.43985),
					box(4.89893, -0.82307, 5.85, 5.32893, 2.61693, 6.28), box(6.61893, -0.13507, 11.44, 7.04893, 3.30493, 11.87), box(4.56, -0.50032, 9.43985, 4.99, 2.93968, 9.86985), box(6.18893, -0.30707, 11.01, 6.61893, 3.13293, 11.44),
					box(5.32893, -0.65107, 10.15, 5.75893, 2.78893, 10.58), box(5.75893, -0.47907, 10.58, 6.18893, 2.96093, 11.01), box(6.18893, -0.30707, 4.56, 6.61893, 3.13293, 4.99), box(5.75893, -0.47907, 4.99, 6.18893, 2.96093, 5.42),
					box(10.29574, -0.69305, 10.15, 10.72574, 2.74695, 10.58), box(4.89893, -0.82307, 9.7372, 5.32893, 2.61693, 10.1672), box(5.42, -0.84432, 10.29985, 5.85, 2.59568, 10.72985), box(6.61893, -0.13507, 4.13, 7.04893, 3.30493, 4.56),
					box(10.72574, -0.86505, 5.85, 11.15574, 2.57495, 6.28), box(10.72574, -0.86505, 9.72, 11.15574, 2.57495, 10.15), box(4.99, -0.47523, 5.85114, 5.42, 2.96477, 6.28114), box(10.15, -0.64723, 5.42114, 10.58, 2.79277, 5.85114),
					box(6.28, -1.0158, 4.47305, 9.72, 2.4242, 4.90305), box(6.28, 3.83278, 12.98465, 9.72, 8.99278, 13.41465), box(13.074, 3.83285, 6.28, 13.504, 8.99285, 9.72), box(2.66465, 3.83278, 6.28, 3.09465, 8.99278, 9.72),
					box(4.46893, -0.99507, 6.28, 4.89893, 2.44493, 9.72), box(6.28, -1.18832, 11.15986, 9.72, 2.25168, 11.58985), box(12.20893, 10.82414, 6.28, 12.63893, 15.98414, 9.72), box(6.28, 10.5082, 12.21305, 9.72, 16.0122, 12.64305),
					box(3.41574, 10.83095, 6.28, 3.84574, 15.99095, 9.72), box(6.28, 10.50768, 3.41986, 9.72, 16.01168, 3.84986), box(11.15574, -1.03705, 6.28, 11.58574, 2.40295, 9.72), box(6.28, 3.83278, 2.66465, 9.72, 8.99278, 3.09465),
					box(4.99, 3.83278, 11.87, 5.42, 8.99278, 12.3), box(10.15, 3.83278, 12.3, 10.58, 8.99278, 12.73), box(11.01, 3.83278, 4.13, 11.44, 8.99278, 4.56), box(10.58, 3.83278, 11.87, 11.01, 8.99278, 12.3),
					box(11.44, 3.83278, 4.56, 11.87, 8.99278, 4.99), box(5.85, 3.83278, 12.73, 6.28, 8.99278, 13.16), box(11.01, 3.83278, 11.44, 11.44, 8.99278, 11.87), box(11.44, 3.83278, 11.01, 11.87, 8.99278, 11.44),
					box(3.098, 3.83278, 5.85, 3.528, 8.99278, 6.28), box(4.56, 3.83278, 11.44, 4.99, 8.99278, 11.87), box(4.13, 3.83278, 11.01, 4.56, 8.99278, 11.44), box(3.098, 3.83278, 9.72, 3.528, 8.99278, 10.15),
					box(4.388, 3.83278, 11.01, 4.818, 8.99278, 11.44), box(5.42, 3.83278, 12.3, 5.85, 8.99278, 12.73), box(3.528, 3.83278, 5.42, 3.958, 8.99278, 5.85), box(3.958, 3.83278, 10.58, 4.388, 8.99278, 11.01),
					box(12.214, 3.83285, 5.42, 12.644, 8.99285, 5.85), box(12.644, 3.83285, 5.85, 13.074, 8.99285, 6.28), box(12.644, 3.83285, 9.72, 13.074, 8.99285, 10.15), box(4.818, 3.83278, 4.13, 5.248, 8.99278, 4.56),
					box(9.72, 3.83278, 12.73, 10.15, 8.99278, 13.16), box(3.958, 3.83278, 4.99, 4.388, 8.99278, 5.42), box(11.784, 3.83285, 10.58, 12.214, 8.99285, 11.01), box(5.85, 3.83278, 3.098, 6.28, 8.99278, 3.528),
					box(12.214, 3.83285, 10.15, 12.644, 8.99285, 10.58), box(10.15, 3.83278, 3.528, 10.58, 8.99278, 3.958), box(3.528, 3.83278, 10.15, 3.958, 8.99278, 10.58), box(4.99, 3.83278, 3.958, 5.42, 8.99278, 4.388),
					box(10.58, 3.83278, 3.958, 11.01, 8.99278, 4.388), box(11.784, 3.83285, 4.99, 12.214, 8.99285, 5.42), box(9.72, 3.83278, 3.098, 10.15, 8.99278, 3.528), box(5.42, 3.83278, 3.528, 5.85, 8.99278, 3.958),
					box(4.388, 3.83278, 4.56, 4.818, 8.99278, 4.99), box(10.92228, 10.30814, 10.58, 11.35228, 15.46814, 11.01), box(11.78228, 10.65214, 5.85, 12.21228, 15.81214, 6.28), box(11.78228, 10.65214, 9.72, 12.21228, 15.81214, 10.15),
					box(11.35228, 10.48014, 5.42, 11.78228, 15.64014, 5.85), box(9.72, 10.33568, 3.84986, 10.15, 15.83968, 4.27986), box(11.35228, 10.48014, 10.15, 11.78228, 15.64014, 10.58), box(10.06228, 9.96414, 4.13, 10.49228, 15.12414, 4.56),
					box(9.63228, 9.79214, 3.7, 10.06228, 14.95214, 4.13), box(10.49228, 10.13614, 4.56, 10.92228, 15.29614, 4.99), box(11.01, 9.81968, 5.13985, 11.44, 15.32368, 5.56985), box(10.06228, 9.96414, 11.44, 10.49228, 15.12414, 11.87),
					box(9.63228, 9.79214, 11.87, 10.06228, 14.95214, 12.3), box(5.85, 10.33568, 3.84986, 6.28, 15.83968, 4.27986), box(10.92228, 10.30814, 4.99, 11.35228, 15.46814, 5.42), box(10.49228, 10.13614, 11.01, 10.92228, 15.29614, 11.44),
					box(4.99, 9.99168, 4.70985, 5.42, 15.49568, 5.13985), box(5.42, 10.16368, 4.27986, 5.85, 15.66768, 4.70985), box(11.44, 9.64768, 5.56985, 11.87, 15.15168, 5.99985), box(11.87, 9.47568, 5.99985, 12.3, 14.97968, 6.42985),
					box(4.13, 9.64768, 5.56985, 4.56, 15.15168, 5.99985), box(3.7, 9.47568, 5.99985, 4.13, 14.97968, 6.42985), box(4.56, 9.81968, 5.13985, 4.99, 15.32368, 5.56985), box(10.58, 9.99168, 4.70985, 11.01, 15.49568, 5.13985),
					box(10.15, 10.16368, 4.27986, 10.58, 15.66768, 4.70985), box(3.84574, 10.65895, 9.72, 4.27574, 15.81895, 10.15), box(3.84574, 10.65895, 5.85, 4.27574, 15.81895, 6.28), box(4.27574, 10.48695, 5.42, 4.70574, 15.64695, 5.85),
					box(4.27574, 10.48695, 10.15, 4.70574, 15.64695, 10.58), box(4.70574, 10.31495, 4.99, 5.13574, 15.47495, 5.42), box(4.70574, 10.31495, 10.58, 5.13574, 15.47495, 11.01), box(5.13574, 10.14295, 4.56, 5.56574, 15.30295, 4.99),
					box(5.13574, 10.14295, 11.01, 5.56574, 15.30295, 11.44), box(5.56574, 9.97095, 4.13, 5.99574, 15.13095, 4.56), box(5.99574, 9.79895, 3.7, 6.42574, 14.95895, 4.13), box(5.56574, 9.97095, 11.44, 5.99574, 15.13095, 11.87),
					box(5.99574, 9.79895, 11.87, 6.42574, 14.95895, 12.3), box(9.72, 10.3362, 11.78305, 10.15, 15.8402, 12.21305), box(5.85, 10.3362, 11.78305, 6.28, 15.8402, 12.21305), box(10.15, 10.1642, 11.35305, 10.58, 15.6682, 11.78305),
					box(5.42, 10.1642, 11.35305, 5.85, 15.6682, 11.78305), box(4.99, 9.9922, 10.92305, 5.42, 15.4962, 11.35305), box(10.58, 9.9922, 10.92305, 11.01, 15.4962, 11.35305), box(11.01, 9.8202, 10.49305, 11.44, 15.3242, 10.92305),
					box(4.56, 9.8202, 10.49305, 4.99, 15.3242, 10.92305), box(4.13, 9.6482, 10.06305, 4.56, 15.1522, 10.49305), box(3.7, 9.4762, 9.63305, 4.13, 14.9802, 10.06305), box(11.44, 9.6482, 10.06305, 11.87, 15.1522, 10.49305),
					box(11.87, 9.4762, 9.63305, 12.3, 14.9802, 10.06305), box(8.688, 16.168, 7.312, 9.376, 17.2, 8.688), box(7.312, 13.416, 7.312, 8.688, 14.792, 8.688), box(6.968, 16.168, 8.688, 7.312, 17.2, 9.032),
					box(6.968, 16.168, 6.968, 7.312, 17.2, 7.312), box(7.312, 14.792, 7.312, 8.688, 16.168, 8.688), box(7.312, 16.168, 7.312, 8.688, 17.544, 8.688), box(6.28, 13.416, 7.312, 7.312, 14.792, 8.688),
					box(6.624, 16.168, 7.312, 7.312, 17.2, 8.688), box(7.312, 16.512, 6.624, 8.688, 17.2, 7.312), box(8.688, 14.104, 7.312, 9.376, 15.136, 8.688), box(8.688, 16.168, 8.688, 9.032, 17.2, 9.032),
					box(8.688, 13.416, 7.312, 9.72, 14.792, 8.688), box(7.312, 16.512, 8.688, 8.688, 17.2, 9.376), box(6.624, 14.104, 7.312, 7.312, 15.136, 8.688), box(9.032, 13.416, 7.312, 10.064, 14.448, 8.688),
					box(6.968, 14.448, 7.312, 7.312, 15.48, 8.688), box(5.936, 13.416, 7.312, 6.968, 14.448, 8.688), box(8.688, 14.448, 7.312, 9.032, 15.48, 8.688), box(8.688, 16.168, 6.968, 9.032, 17.2, 7.312),
					box(1.98, 13.33, 4.99, 14.02, 14.19, 5.42), box(1.55, 13.33, 5.42, 14.45, 14.19, 5.85), box(0.69, 13.33, 6.28, 15.31, 14.19, 9.72), box(1.12, 13.33, 5.85, 14.88, 14.19, 6.28), box(2.84, 13.33, 11.44, 13.16, 14.19, 11.87),
					box(2.41, 13.33, 4.56, 13.59, 14.19, 4.99), box(2.41, 13.33, 11.01, 13.59, 14.19, 11.44), box(2.84, 13.33, 4.13, 13.16, 14.19, 4.56), box(5.85, 13.33, 1.12, 6.28, 14.19, 14.88), box(10.15, 13.33, 1.55, 10.58, 14.19, 14.45),
					box(3.27, 13.33, 3.7, 12.73, 14.19, 4.13), box(9.72, 13.33, 1.12, 10.15, 14.19, 14.88), box(4.13, 13.33, 2.84, 4.56, 14.19, 13.16), box(1.55, 13.33, 10.15, 14.45, 14.19, 10.58), box(3.27, 13.33, 11.87, 12.73, 14.19, 12.3),
					box(11.44, 13.33, 2.84, 11.87, 14.19, 13.16), box(4.99, 13.33, 1.98, 5.42, 14.19, 14.02), box(10.58, 13.33, 1.98, 11.01, 14.19, 14.02), box(11.01, 13.33, 2.41, 11.44, 14.19, 13.59), box(3.7, 13.33, 3.27, 4.13, 14.19, 12.73),
					box(4.56, 13.33, 2.41, 4.99, 14.19, 13.59), box(11.6464, 13.33, 3.27, 12.0764, 14.19, 12.73), box(5.42, 13.33, 1.55, 5.85, 14.19, 14.45), box(1.98, 13.33, 10.58, 14.02, 14.19, 11.01), box(1.12, 13.33, 9.72, 14.88, 14.19, 10.15),
					box(6.28, 13.33, 0.69, 9.72, 14.19, 15.31));
			case NORTH -> Shapes.or(box(0.69, 13.76, 6.28, 1.55, 15.48, 9.72), box(0.69, 15.05, 6.28, 15.31, 15.91, 9.72), box(14.45, 13.76, 6.28, 15.31, 15.48, 9.72), box(1.12, 0, 1.12, 14.88, 0.86, 14.88),
					box(10.15, -0.64723, 10.14886, 10.58, 2.79277, 10.57886), box(9.72, -0.81923, 10.57886, 10.15, 2.62077, 11.00886), box(5.85, -0.81923, 10.57886, 6.28, 2.62077, 11.00886), box(11.01, -0.30323, 9.28886, 11.44, 3.13677, 9.71886),
					box(4.13, -0.13123, 8.85886, 4.56, 3.30877, 9.28886), box(11.44, -0.13123, 8.85886, 11.87, 3.30877, 9.28886), box(4.99, -0.47523, 9.71886, 5.42, 2.96477, 10.14886), box(5.27426, -0.69305, 10.15, 5.70426, 2.74695, 10.58),
					box(5.70426, -0.52105, 4.99, 6.13426, 2.91895, 5.42), box(5.70426, -0.52105, 10.58, 6.13426, 2.91895, 11.01), box(6.56426, -0.17705, 4.13, 6.99426, 3.26295, 4.56), box(4.99, -0.67232, 5.70015, 5.42, 2.76768, 6.13015),
					box(6.13426, -0.34905, 11.01, 6.56426, 3.09095, 11.44), box(5.42, -0.84432, 5.27015, 5.85, 2.59568, 5.70015), box(6.13426, -0.34905, 4.56, 6.56426, 3.09095, 4.99), box(6.56426, -0.17705, 11.44, 6.99426, 3.26295, 11.87),
					box(9.72, -1.01632, 4.84014, 10.15, 2.42368, 5.27015), box(10.58, -0.67232, 5.70015, 11.01, 2.76768, 6.13015), box(4.56, -0.50032, 6.13015, 4.99, 2.93968, 6.56015), box(5.85, -1.01632, 4.84014, 6.28, 2.42368, 5.27015),
					box(4.56, -0.30323, 9.28886, 4.99, 3.13677, 9.71886), box(10.24107, -0.65107, 10.15, 10.67107, 2.78893, 10.58), box(11.44, -0.32832, 6.56015, 11.87, 3.11168, 6.99015), box(4.13, -0.32832, 6.56015, 4.56, 3.11168, 6.99015),
					box(10.67107, -0.82307, 9.72, 11.10107, 2.61693, 10.15), box(8.95107, -0.13507, 4.13, 9.38107, 3.30493, 4.56), box(11.01, -0.50032, 6.13015, 11.44, 2.93968, 6.56015), box(9.38107, -0.30707, 4.56, 9.81107, 3.13293, 4.99),
					box(10.24107, -0.65107, 5.42, 10.67107, 2.78893, 5.85), box(9.81107, -0.47907, 4.99, 10.24107, 2.96093, 5.42), box(9.38107, -0.30707, 11.01, 9.81107, 3.13293, 11.44), box(9.81107, -0.47907, 10.58, 10.24107, 2.96093, 11.01),
					box(5.27426, -0.69305, 5.42, 5.70426, 2.74695, 5.85), box(10.67107, -0.82307, 5.8328, 11.10107, 2.61693, 6.2628), box(10.15, -0.84432, 5.27015, 10.58, 2.59568, 5.70015), box(8.95107, -0.13507, 11.44, 9.38107, 3.30493, 11.87),
					box(4.84426, -0.86505, 9.72, 5.27426, 2.57495, 10.15), box(4.84426, -0.86505, 5.85, 5.27426, 2.57495, 6.28), box(10.58, -0.47523, 9.71886, 11.01, 2.96477, 10.14886), box(5.42, -0.64723, 10.14886, 5.85, 2.79277, 10.57886),
					box(6.28, -1.0158, 11.09695, 9.72, 2.4242, 11.52695), box(6.28, 3.83278, 2.58535, 9.72, 8.99278, 3.01535), box(2.496, 3.83285, 6.28, 2.926, 8.99285, 9.72), box(12.90535, 3.83278, 6.28, 13.33535, 8.99278, 9.72),
					box(11.10107, -0.99507, 6.28, 11.53107, 2.44493, 9.72), box(6.28, -1.18832, 4.41015, 9.72, 2.25168, 4.84014), box(3.36107, 10.82414, 6.28, 3.79107, 15.98414, 9.72), box(6.28, 10.5082, 3.35695, 9.72, 16.0122, 3.78695),
					box(12.15426, 10.83095, 6.28, 12.58426, 15.99095, 9.72), box(6.28, 10.50768, 12.15014, 9.72, 16.01168, 12.58014), box(4.41426, -1.03705, 6.28, 4.84426, 2.40295, 9.72), box(6.28, 3.83278, 12.90535, 9.72, 8.99278, 13.33535),
					box(10.58, 3.83278, 3.7, 11.01, 8.99278, 4.13), box(5.42, 3.83278, 3.27, 5.85, 8.99278, 3.7), box(4.56, 3.83278, 11.44, 4.99, 8.99278, 11.87), box(4.99, 3.83278, 3.7, 5.42, 8.99278, 4.13),
					box(4.13, 3.83278, 11.01, 4.56, 8.99278, 11.44), box(9.72, 3.83278, 2.84, 10.15, 8.99278, 3.27), box(4.56, 3.83278, 4.13, 4.99, 8.99278, 4.56), box(4.13, 3.83278, 4.56, 4.56, 8.99278, 4.99),
					box(12.472, 3.83278, 9.72, 12.902, 8.99278, 10.15), box(11.01, 3.83278, 4.13, 11.44, 8.99278, 4.56), box(11.44, 3.83278, 4.56, 11.87, 8.99278, 4.99), box(12.472, 3.83278, 5.85, 12.902, 8.99278, 6.28),
					box(11.182, 3.83278, 4.56, 11.612, 8.99278, 4.99), box(10.15, 3.83278, 3.27, 10.58, 8.99278, 3.7), box(12.042, 3.83278, 10.15, 12.472, 8.99278, 10.58), box(11.612, 3.83278, 4.99, 12.042, 8.99278, 5.42),
					box(3.356, 3.83285, 10.15, 3.786, 8.99285, 10.58), box(2.926, 3.83285, 9.72, 3.356, 8.99285, 10.15), box(2.926, 3.83285, 5.85, 3.356, 8.99285, 6.28), box(10.752, 3.83278, 11.44, 11.182, 8.99278, 11.87),
					box(5.85, 3.83278, 2.84, 6.28, 8.99278, 3.27), box(11.612, 3.83278, 10.58, 12.042, 8.99278, 11.01), box(3.786, 3.83285, 4.99, 4.216, 8.99285, 5.42), box(9.72, 3.83278, 12.472, 10.15, 8.99278, 12.902),
					box(3.356, 3.83285, 5.42, 3.786, 8.99285, 5.85), box(5.42, 3.83278, 12.042, 5.85, 8.99278, 12.472), box(12.042, 3.83278, 5.42, 12.472, 8.99278, 5.85), box(10.58, 3.83278, 11.612, 11.01, 8.99278, 12.042),
					box(4.99, 3.83278, 11.612, 5.42, 8.99278, 12.042), box(3.786, 3.83285, 10.58, 4.216, 8.99285, 11.01), box(5.85, 3.83278, 12.472, 6.28, 8.99278, 12.902), box(10.15, 3.83278, 12.042, 10.58, 8.99278, 12.472),
					box(11.182, 3.83278, 11.01, 11.612, 8.99278, 11.44), box(4.64772, 10.30814, 4.99, 5.07772, 15.46814, 5.42), box(3.78772, 10.65214, 9.72, 4.21772, 15.81214, 10.15), box(3.78772, 10.65214, 5.85, 4.21772, 15.81214, 6.28),
					box(4.21772, 10.48014, 10.15, 4.64772, 15.64014, 10.58), box(5.85, 10.33568, 11.72014, 6.28, 15.83968, 12.15014), box(4.21772, 10.48014, 5.42, 4.64772, 15.64014, 5.85), box(5.50772, 9.96414, 11.44, 5.93772, 15.12414, 11.87),
					box(5.93772, 9.79214, 11.87, 6.36772, 14.95214, 12.3), box(5.07772, 10.13614, 11.01, 5.50772, 15.29614, 11.44), box(4.56, 9.81968, 10.43015, 4.99, 15.32368, 10.86015), box(5.50772, 9.96414, 4.13, 5.93772, 15.12414, 4.56),
					box(5.93772, 9.79214, 3.7, 6.36772, 14.95214, 4.13), box(9.72, 10.33568, 11.72014, 10.15, 15.83968, 12.15014), box(4.64772, 10.30814, 10.58, 5.07772, 15.46814, 11.01), box(5.07772, 10.13614, 4.56, 5.50772, 15.29614, 4.99),
					box(10.58, 9.99168, 10.86015, 11.01, 15.49568, 11.29015), box(10.15, 10.16368, 11.29015, 10.58, 15.66768, 11.72014), box(4.13, 9.64768, 10.00015, 4.56, 15.15168, 10.43015), box(3.7, 9.47568, 9.57015, 4.13, 14.97968, 10.00015),
					box(11.44, 9.64768, 10.00015, 11.87, 15.15168, 10.43015), box(11.87, 9.47568, 9.57015, 12.3, 14.97968, 10.00015), box(11.01, 9.81968, 10.43015, 11.44, 15.32368, 10.86015), box(4.99, 9.99168, 10.86015, 5.42, 15.49568, 11.29015),
					box(5.42, 10.16368, 11.29015, 5.85, 15.66768, 11.72014), box(11.72426, 10.65895, 5.85, 12.15426, 15.81895, 6.28), box(11.72426, 10.65895, 9.72, 12.15426, 15.81895, 10.15), box(11.29426, 10.48695, 10.15, 11.72426, 15.64695, 10.58),
					box(11.29426, 10.48695, 5.42, 11.72426, 15.64695, 5.85), box(10.86426, 10.31495, 10.58, 11.29426, 15.47495, 11.01), box(10.86426, 10.31495, 4.99, 11.29426, 15.47495, 5.42),
					box(10.43426, 10.14295, 11.01, 10.86426, 15.30295, 11.44), box(10.43426, 10.14295, 4.56, 10.86426, 15.30295, 4.99), box(10.00426, 9.97095, 11.44, 10.43426, 15.13095, 11.87), box(9.57426, 9.79895, 11.87, 10.00426, 14.95895, 12.3),
					box(10.00426, 9.97095, 4.13, 10.43426, 15.13095, 4.56), box(9.57426, 9.79895, 3.7, 10.00426, 14.95895, 4.13), box(5.85, 10.3362, 3.78695, 6.28, 15.8402, 4.21695), box(9.72, 10.3362, 3.78695, 10.15, 15.8402, 4.21695),
					box(5.42, 10.1642, 4.21695, 5.85, 15.6682, 4.64695), box(10.15, 10.1642, 4.21695, 10.58, 15.6682, 4.64695), box(10.58, 9.9922, 4.64695, 11.01, 15.4962, 5.07695), box(4.99, 9.9922, 4.64695, 5.42, 15.4962, 5.07695),
					box(4.56, 9.8202, 5.07695, 4.99, 15.3242, 5.50695), box(11.01, 9.8202, 5.07695, 11.44, 15.3242, 5.50695), box(11.44, 9.6482, 5.50695, 11.87, 15.1522, 5.93695), box(11.87, 9.4762, 5.93695, 12.3, 14.9802, 6.36695),
					box(4.13, 9.6482, 5.50695, 4.56, 15.1522, 5.93695), box(3.7, 9.4762, 5.93695, 4.13, 14.9802, 6.36695), box(6.624, 16.168, 7.312, 7.312, 17.2, 8.688), box(7.312, 13.416, 7.312, 8.688, 14.792, 8.688),
					box(8.688, 16.168, 6.968, 9.032, 17.2, 7.312), box(8.688, 16.168, 8.688, 9.032, 17.2, 9.032), box(7.312, 14.792, 7.312, 8.688, 16.168, 8.688), box(7.312, 16.168, 7.312, 8.688, 17.544, 8.688),
					box(8.688, 13.416, 7.312, 9.72, 14.792, 8.688), box(8.688, 16.168, 7.312, 9.376, 17.2, 8.688), box(7.312, 16.512, 8.688, 8.688, 17.2, 9.376), box(6.624, 14.104, 7.312, 7.312, 15.136, 8.688),
					box(6.968, 16.168, 6.968, 7.312, 17.2, 7.312), box(6.28, 13.416, 7.312, 7.312, 14.792, 8.688), box(7.312, 16.512, 6.624, 8.688, 17.2, 7.312), box(8.688, 14.104, 7.312, 9.376, 15.136, 8.688),
					box(5.936, 13.416, 7.312, 6.968, 14.448, 8.688), box(8.688, 14.448, 7.312, 9.032, 15.48, 8.688), box(9.032, 13.416, 7.312, 10.064, 14.448, 8.688), box(6.968, 14.448, 7.312, 7.312, 15.48, 8.688),
					box(6.968, 16.168, 8.688, 7.312, 17.2, 9.032), box(1.98, 13.33, 10.58, 14.02, 14.19, 11.01), box(1.55, 13.33, 10.15, 14.45, 14.19, 10.58), box(0.69, 13.33, 6.28, 15.31, 14.19, 9.72), box(1.12, 13.33, 9.72, 14.88, 14.19, 10.15),
					box(2.84, 13.33, 4.13, 13.16, 14.19, 4.56), box(2.41, 13.33, 11.01, 13.59, 14.19, 11.44), box(2.41, 13.33, 4.56, 13.59, 14.19, 4.99), box(2.84, 13.33, 11.44, 13.16, 14.19, 11.87), box(9.72, 13.33, 1.12, 10.15, 14.19, 14.88),
					box(5.42, 13.33, 1.55, 5.85, 14.19, 14.45), box(3.27, 13.33, 11.87, 12.73, 14.19, 12.3), box(5.85, 13.33, 1.12, 6.28, 14.19, 14.88), box(11.44, 13.33, 2.84, 11.87, 14.19, 13.16), box(1.55, 13.33, 5.42, 14.45, 14.19, 5.85),
					box(3.27, 13.33, 3.7, 12.73, 14.19, 4.13), box(4.13, 13.33, 2.84, 4.56, 14.19, 13.16), box(10.58, 13.33, 1.98, 11.01, 14.19, 14.02), box(4.99, 13.33, 1.98, 5.42, 14.19, 14.02), box(4.56, 13.33, 2.41, 4.99, 14.19, 13.59),
					box(11.87, 13.33, 3.27, 12.3, 14.19, 12.73), box(11.01, 13.33, 2.41, 11.44, 14.19, 13.59), box(3.9236, 13.33, 3.27, 4.3536, 14.19, 12.73), box(10.15, 13.33, 1.55, 10.58, 14.19, 14.45), box(1.98, 13.33, 4.99, 14.02, 14.19, 5.42),
					box(1.12, 13.33, 5.85, 14.88, 14.19, 6.28), box(6.28, 13.33, 0.69, 9.72, 14.19, 15.31));
			case EAST -> Shapes.or(box(6.28, 13.76, 0.69, 9.72, 15.48, 1.55), box(6.28, 15.05, 0.69, 9.72, 15.91, 15.31), box(6.28, 13.76, 14.45, 9.72, 15.48, 15.31), box(1.12, 0, 1.12, 14.88, 0.86, 14.88),
					box(5.42114, -0.64723, 10.15, 5.85114, 2.79277, 10.58), box(4.99114, -0.81923, 9.72, 5.42114, 2.62077, 10.15), box(4.99114, -0.81923, 5.85, 5.42114, 2.62077, 6.28), box(6.28114, -0.30323, 11.01, 6.71114, 3.13677, 11.44),
					box(6.71114, -0.13123, 4.13, 7.14114, 3.30877, 4.56), box(6.71114, -0.13123, 11.44, 7.14114, 3.30877, 11.87), box(5.85114, -0.47523, 4.99, 6.28114, 2.96477, 5.42), box(5.42, -0.69305, 5.27426, 5.85, 2.74695, 5.70426),
					box(10.58, -0.52105, 5.70426, 11.01, 2.91895, 6.13426), box(4.99, -0.52105, 5.70426, 5.42, 2.91895, 6.13426), box(11.44, -0.17705, 6.56426, 11.87, 3.26295, 6.99426), box(9.86985, -0.67232, 4.99, 10.29985, 2.76768, 5.42),
					box(4.56, -0.34905, 6.13426, 4.99, 3.09095, 6.56426), box(10.29985, -0.84432, 5.42, 10.72985, 2.59568, 5.85), box(11.01, -0.34905, 6.13426, 11.44, 3.09095, 6.56426), box(4.13, -0.17705, 6.56426, 4.56, 3.26295, 6.99426),
					box(10.72985, -1.01632, 9.72, 11.15986, 2.42368, 10.15), box(9.86985, -0.67232, 10.58, 10.29985, 2.76768, 11.01), box(9.43985, -0.50032, 4.56, 9.86985, 2.93968, 4.99), box(10.72985, -1.01632, 5.85, 11.15986, 2.42368, 6.28),
					box(6.28114, -0.30323, 4.56, 6.71114, 3.13677, 4.99), box(5.42, -0.65107, 10.24107, 5.85, 2.78893, 10.67107), box(9.00985, -0.32832, 11.44, 9.43985, 3.11168, 11.87), box(9.00985, -0.32832, 4.13, 9.43985, 3.11168, 4.56),
					box(5.85, -0.82307, 10.67107, 6.28, 2.61693, 11.10107), box(11.44, -0.13507, 8.95107, 11.87, 3.30493, 9.38107), box(9.43985, -0.50032, 11.01, 9.86985, 2.93968, 11.44), box(11.01, -0.30707, 9.38107, 11.44, 3.13293, 9.81107),
					box(10.15, -0.65107, 10.24107, 10.58, 2.78893, 10.67107), box(10.58, -0.47907, 9.81107, 11.01, 2.96093, 10.24107), box(4.56, -0.30707, 9.38107, 4.99, 3.13293, 9.81107), box(4.99, -0.47907, 9.81107, 5.42, 2.96093, 10.24107),
					box(10.15, -0.69305, 5.27426, 10.58, 2.74695, 5.70426), box(9.7372, -0.82307, 10.67107, 10.1672, 2.61693, 11.10107), box(10.29985, -0.84432, 10.15, 10.72985, 2.59568, 10.58), box(4.13, -0.13507, 8.95107, 4.56, 3.30493, 9.38107),
					box(5.85, -0.86505, 4.84426, 6.28, 2.57495, 5.27426), box(9.72, -0.86505, 4.84426, 10.15, 2.57495, 5.27426), box(5.85114, -0.47523, 10.58, 6.28114, 2.96477, 11.01), box(5.42114, -0.64723, 5.42, 5.85114, 2.79277, 5.85),
					box(4.47305, -1.0158, 6.28, 4.90305, 2.4242, 9.72), box(12.98465, 3.83278, 6.28, 13.41465, 8.99278, 9.72), box(6.28, 3.83285, 2.496, 9.72, 8.99285, 2.926), box(6.28, 3.83278, 12.90535, 9.72, 8.99278, 13.33535),
					box(6.28, -0.99507, 11.10107, 9.72, 2.44493, 11.53107), box(11.15986, -1.18832, 6.28, 11.58985, 2.25168, 9.72), box(6.28, 10.82414, 3.36107, 9.72, 15.98414, 3.79107), box(12.21305, 10.5082, 6.28, 12.64305, 16.0122, 9.72),
					box(6.28, 10.83095, 12.15426, 9.72, 15.99095, 12.58426), box(3.41986, 10.50768, 6.28, 3.84986, 16.01168, 9.72), box(6.28, -1.03705, 4.41426, 9.72, 2.40295, 4.84426), box(2.66465, 3.83278, 6.28, 3.09465, 8.99278, 9.72),
					box(11.87, 3.83278, 10.58, 12.3, 8.99278, 11.01), box(12.3, 3.83278, 5.42, 12.73, 8.99278, 5.85), box(4.13, 3.83278, 4.56, 4.56, 8.99278, 4.99), box(11.87, 3.83278, 4.99, 12.3, 8.99278, 5.42),
					box(4.56, 3.83278, 4.13, 4.99, 8.99278, 4.56), box(12.73, 3.83278, 9.72, 13.16, 8.99278, 10.15), box(11.44, 3.83278, 4.56, 11.87, 8.99278, 4.99), box(11.01, 3.83278, 4.13, 11.44, 8.99278, 4.56),
					box(5.85, 3.83278, 12.472, 6.28, 8.99278, 12.902), box(11.44, 3.83278, 11.01, 11.87, 8.99278, 11.44), box(11.01, 3.83278, 11.44, 11.44, 8.99278, 11.87), box(9.72, 3.83278, 12.472, 10.15, 8.99278, 12.902),
					box(11.01, 3.83278, 11.182, 11.44, 8.99278, 11.612), box(12.3, 3.83278, 10.15, 12.73, 8.99278, 10.58), box(5.42, 3.83278, 12.042, 5.85, 8.99278, 12.472), box(10.58, 3.83278, 11.612, 11.01, 8.99278, 12.042),
					box(5.42, 3.83285, 3.356, 5.85, 8.99285, 3.786), box(5.85, 3.83285, 2.926, 6.28, 8.99285, 3.356), box(9.72, 3.83285, 2.926, 10.15, 8.99285, 3.356), box(4.13, 3.83278, 10.752, 4.56, 8.99278, 11.182),
					box(12.73, 3.83278, 5.85, 13.16, 8.99278, 6.28), box(4.99, 3.83278, 11.612, 5.42, 8.99278, 12.042), box(10.58, 3.83285, 3.786, 11.01, 8.99285, 4.216), box(3.098, 3.83278, 9.72, 3.528, 8.99278, 10.15),
					box(10.15, 3.83285, 3.356, 10.58, 8.99285, 3.786), box(3.528, 3.83278, 5.42, 3.958, 8.99278, 5.85), box(10.15, 3.83278, 12.042, 10.58, 8.99278, 12.472), box(3.958, 3.83278, 10.58, 4.388, 8.99278, 11.01),
					box(3.958, 3.83278, 4.99, 4.388, 8.99278, 5.42), box(4.99, 3.83285, 3.786, 5.42, 8.99285, 4.216), box(3.098, 3.83278, 5.85, 3.528, 8.99278, 6.28), box(3.528, 3.83278, 10.15, 3.958, 8.99278, 10.58),
					box(4.56, 3.83278, 11.182, 4.99, 8.99278, 11.612), box(10.58, 10.30814, 4.64772, 11.01, 15.46814, 5.07772), box(5.85, 10.65214, 3.78772, 6.28, 15.81214, 4.21772), box(9.72, 10.65214, 3.78772, 10.15, 15.81214, 4.21772),
					box(5.42, 10.48014, 4.21772, 5.85, 15.64014, 4.64772), box(3.84986, 10.33568, 5.85, 4.27986, 15.83968, 6.28), box(10.15, 10.48014, 4.21772, 10.58, 15.64014, 4.64772), box(4.13, 9.96414, 5.50772, 4.56, 15.12414, 5.93772),
					box(3.7, 9.79214, 5.93772, 4.13, 14.95214, 6.36772), box(4.56, 10.13614, 5.07772, 4.99, 15.29614, 5.50772), box(5.13985, 9.81968, 4.56, 5.56985, 15.32368, 4.99), box(11.44, 9.96414, 5.50772, 11.87, 15.12414, 5.93772),
					box(11.87, 9.79214, 5.93772, 12.3, 14.95214, 6.36772), box(3.84986, 10.33568, 9.72, 4.27986, 15.83968, 10.15), box(4.99, 10.30814, 4.64772, 5.42, 15.46814, 5.07772), box(11.01, 10.13614, 5.07772, 11.44, 15.29614, 5.50772),
					box(4.70985, 9.99168, 10.58, 5.13985, 15.49568, 11.01), box(4.27986, 10.16368, 10.15, 4.70985, 15.66768, 10.58), box(5.56985, 9.64768, 4.13, 5.99985, 15.15168, 4.56), box(5.99985, 9.47568, 3.7, 6.42985, 14.97968, 4.13),
					box(5.56985, 9.64768, 11.44, 5.99985, 15.15168, 11.87), box(5.99985, 9.47568, 11.87, 6.42985, 14.97968, 12.3), box(5.13985, 9.81968, 11.01, 5.56985, 15.32368, 11.44), box(4.70985, 9.99168, 4.99, 5.13985, 15.49568, 5.42),
					box(4.27986, 10.16368, 5.42, 4.70985, 15.66768, 5.85), box(9.72, 10.65895, 11.72426, 10.15, 15.81895, 12.15426), box(5.85, 10.65895, 11.72426, 6.28, 15.81895, 12.15426), box(5.42, 10.48695, 11.29426, 5.85, 15.64695, 11.72426),
					box(10.15, 10.48695, 11.29426, 10.58, 15.64695, 11.72426), box(4.99, 10.31495, 10.86426, 5.42, 15.47495, 11.29426), box(10.58, 10.31495, 10.86426, 11.01, 15.47495, 11.29426),
					box(4.56, 10.14295, 10.43426, 4.99, 15.30295, 10.86426), box(11.01, 10.14295, 10.43426, 11.44, 15.30295, 10.86426), box(4.13, 9.97095, 10.00426, 4.56, 15.13095, 10.43426), box(3.7, 9.79895, 9.57426, 4.13, 14.95895, 10.00426),
					box(11.44, 9.97095, 10.00426, 11.87, 15.13095, 10.43426), box(11.87, 9.79895, 9.57426, 12.3, 14.95895, 10.00426), box(11.78305, 10.3362, 5.85, 12.21305, 15.8402, 6.28), box(11.78305, 10.3362, 9.72, 12.21305, 15.8402, 10.15),
					box(11.35305, 10.1642, 5.42, 11.78305, 15.6682, 5.85), box(11.35305, 10.1642, 10.15, 11.78305, 15.6682, 10.58), box(10.92305, 9.9922, 10.58, 11.35305, 15.4962, 11.01), box(10.92305, 9.9922, 4.99, 11.35305, 15.4962, 5.42),
					box(10.49305, 9.8202, 4.56, 10.92305, 15.3242, 4.99), box(10.49305, 9.8202, 11.01, 10.92305, 15.3242, 11.44), box(10.06305, 9.6482, 11.44, 10.49305, 15.1522, 11.87), box(9.63305, 9.4762, 11.87, 10.06305, 14.9802, 12.3),
					box(10.06305, 9.6482, 4.13, 10.49305, 15.1522, 4.56), box(9.63305, 9.4762, 3.7, 10.06305, 14.9802, 4.13), box(7.312, 16.168, 6.624, 8.688, 17.2, 7.312), box(7.312, 13.416, 7.312, 8.688, 14.792, 8.688),
					box(8.688, 16.168, 8.688, 9.032, 17.2, 9.032), box(6.968, 16.168, 8.688, 7.312, 17.2, 9.032), box(7.312, 14.792, 7.312, 8.688, 16.168, 8.688), box(7.312, 16.168, 7.312, 8.688, 17.544, 8.688),
					box(7.312, 13.416, 8.688, 8.688, 14.792, 9.72), box(7.312, 16.168, 8.688, 8.688, 17.2, 9.376), box(6.624, 16.512, 7.312, 7.312, 17.2, 8.688), box(7.312, 14.104, 6.624, 8.688, 15.136, 7.312),
					box(8.688, 16.168, 6.968, 9.032, 17.2, 7.312), box(7.312, 13.416, 6.28, 8.688, 14.792, 7.312), box(8.688, 16.512, 7.312, 9.376, 17.2, 8.688), box(7.312, 14.104, 8.688, 8.688, 15.136, 9.376),
					box(7.312, 13.416, 5.936, 8.688, 14.448, 6.968), box(7.312, 14.448, 8.688, 8.688, 15.48, 9.032), box(7.312, 13.416, 9.032, 8.688, 14.448, 10.064), box(7.312, 14.448, 6.968, 8.688, 15.48, 7.312),
					box(6.968, 16.168, 6.968, 7.312, 17.2, 7.312), box(4.99, 13.33, 1.98, 5.42, 14.19, 14.02), box(5.42, 13.33, 1.55, 5.85, 14.19, 14.45), box(6.28, 13.33, 0.69, 9.72, 14.19, 15.31), box(5.85, 13.33, 1.12, 6.28, 14.19, 14.88),
					box(11.44, 13.33, 2.84, 11.87, 14.19, 13.16), box(4.56, 13.33, 2.41, 4.99, 14.19, 13.59), box(11.01, 13.33, 2.41, 11.44, 14.19, 13.59), box(4.13, 13.33, 2.84, 4.56, 14.19, 13.16), box(1.12, 13.33, 9.72, 14.88, 14.19, 10.15),
					box(1.55, 13.33, 5.42, 14.45, 14.19, 5.85), box(3.7, 13.33, 3.27, 4.13, 14.19, 12.73), box(1.12, 13.33, 5.85, 14.88, 14.19, 6.28), box(2.84, 13.33, 11.44, 13.16, 14.19, 11.87), box(10.15, 13.33, 1.55, 10.58, 14.19, 14.45),
					box(11.87, 13.33, 3.27, 12.3, 14.19, 12.73), box(2.84, 13.33, 4.13, 13.16, 14.19, 4.56), box(1.98, 13.33, 10.58, 14.02, 14.19, 11.01), box(1.98, 13.33, 4.99, 14.02, 14.19, 5.42), box(2.41, 13.33, 4.56, 13.59, 14.19, 4.99),
					box(3.27, 13.33, 11.87, 12.73, 14.19, 12.3), box(2.41, 13.33, 11.01, 13.59, 14.19, 11.44), box(3.27, 13.33, 3.9236, 12.73, 14.19, 4.3536), box(1.55, 13.33, 10.15, 14.45, 14.19, 10.58), box(10.58, 13.33, 1.98, 11.01, 14.19, 14.02),
					box(9.72, 13.33, 1.12, 10.15, 14.19, 14.88), box(0.69, 13.33, 6.28, 15.31, 14.19, 9.72));
			case WEST -> Shapes.or(box(6.28, 13.76, 14.45, 9.72, 15.48, 15.31), box(6.28, 15.05, 0.69, 9.72, 15.91, 15.31), box(6.28, 13.76, 0.69, 9.72, 15.48, 1.55), box(1.12, 0, 1.12, 14.88, 0.86, 14.88),
					box(10.14886, -0.64723, 5.42, 10.57886, 2.79277, 5.85), box(10.57886, -0.81923, 5.85, 11.00886, 2.62077, 6.28), box(10.57886, -0.81923, 9.72, 11.00886, 2.62077, 10.15), box(9.28886, -0.30323, 4.56, 9.71886, 3.13677, 4.99),
					box(8.85886, -0.13123, 11.44, 9.28886, 3.30877, 11.87), box(8.85886, -0.13123, 4.13, 9.28886, 3.30877, 4.56), box(9.71886, -0.47523, 10.58, 10.14886, 2.96477, 11.01), box(10.15, -0.69305, 10.29574, 10.58, 2.74695, 10.72574),
					box(4.99, -0.52105, 9.86574, 5.42, 2.91895, 10.29574), box(10.58, -0.52105, 9.86574, 11.01, 2.91895, 10.29574), box(4.13, -0.17705, 9.00574, 4.56, 3.26295, 9.43574), box(5.70015, -0.67232, 10.58, 6.13015, 2.76768, 11.01),
					box(11.01, -0.34905, 9.43574, 11.44, 3.09095, 9.86574), box(5.27015, -0.84432, 10.15, 5.70015, 2.59568, 10.58), box(4.56, -0.34905, 9.43574, 4.99, 3.09095, 9.86574), box(11.44, -0.17705, 9.00574, 11.87, 3.26295, 9.43574),
					box(4.84014, -1.01632, 5.85, 5.27015, 2.42368, 6.28), box(5.70015, -0.67232, 4.99, 6.13015, 2.76768, 5.42), box(6.13015, -0.50032, 11.01, 6.56015, 2.93968, 11.44), box(4.84014, -1.01632, 9.72, 5.27015, 2.42368, 10.15),
					box(9.28886, -0.30323, 11.01, 9.71886, 3.13677, 11.44), box(10.15, -0.65107, 5.32893, 10.58, 2.78893, 5.75893), box(6.56015, -0.32832, 4.13, 6.99015, 3.11168, 4.56), box(6.56015, -0.32832, 11.44, 6.99015, 3.11168, 11.87),
					box(9.72, -0.82307, 4.89893, 10.15, 2.61693, 5.32893), box(4.13, -0.13507, 6.61893, 4.56, 3.30493, 7.04893), box(6.13015, -0.50032, 4.56, 6.56015, 2.93968, 4.99), box(4.56, -0.30707, 6.18893, 4.99, 3.13293, 6.61893),
					box(5.42, -0.65107, 5.32893, 5.85, 2.78893, 5.75893), box(4.99, -0.47907, 5.75893, 5.42, 2.96093, 6.18893), box(11.01, -0.30707, 6.18893, 11.44, 3.13293, 6.61893), box(10.58, -0.47907, 5.75893, 11.01, 2.96093, 6.18893),
					box(5.42, -0.69305, 10.29574, 5.85, 2.74695, 10.72574), box(5.8328, -0.82307, 4.89893, 6.2628, 2.61693, 5.32893), box(5.27015, -0.84432, 5.42, 5.70015, 2.59568, 5.85), box(11.44, -0.13507, 6.61893, 11.87, 3.30493, 7.04893),
					box(9.72, -0.86505, 10.72574, 10.15, 2.57495, 11.15574), box(5.85, -0.86505, 10.72574, 6.28, 2.57495, 11.15574), box(9.71886, -0.47523, 4.99, 10.14886, 2.96477, 5.42), box(10.14886, -0.64723, 10.15, 10.57886, 2.79277, 10.58),
					box(11.09695, -1.0158, 6.28, 11.52695, 2.4242, 9.72), box(2.58535, 3.83278, 6.28, 3.01535, 8.99278, 9.72), box(6.28, 3.83285, 13.074, 9.72, 8.99285, 13.504), box(6.28, 3.83278, 2.66465, 9.72, 8.99278, 3.09465),
					box(6.28, -0.99507, 4.46893, 9.72, 2.44493, 4.89893), box(4.41015, -1.18832, 6.28, 4.84014, 2.25168, 9.72), box(6.28, 10.82414, 12.20893, 9.72, 15.98414, 12.63893), box(3.35695, 10.5082, 6.28, 3.78695, 16.0122, 9.72),
					box(6.28, 10.83095, 3.41574, 9.72, 15.99095, 3.84574), box(12.15014, 10.50768, 6.28, 12.58014, 16.01168, 9.72), box(6.28, -1.03705, 11.15574, 9.72, 2.40295, 11.58574), box(12.90535, 3.83278, 6.28, 13.33535, 8.99278, 9.72),
					box(3.7, 3.83278, 4.99, 4.13, 8.99278, 5.42), box(3.27, 3.83278, 10.15, 3.7, 8.99278, 10.58), box(11.44, 3.83278, 11.01, 11.87, 8.99278, 11.44), box(3.7, 3.83278, 10.58, 4.13, 8.99278, 11.01),
					box(11.01, 3.83278, 11.44, 11.44, 8.99278, 11.87), box(2.84, 3.83278, 5.85, 3.27, 8.99278, 6.28), box(4.13, 3.83278, 11.01, 4.56, 8.99278, 11.44), box(4.56, 3.83278, 11.44, 4.99, 8.99278, 11.87),
					box(9.72, 3.83278, 3.098, 10.15, 8.99278, 3.528), box(4.13, 3.83278, 4.56, 4.56, 8.99278, 4.99), box(4.56, 3.83278, 4.13, 4.99, 8.99278, 4.56), box(5.85, 3.83278, 3.098, 6.28, 8.99278, 3.528),
					box(4.56, 3.83278, 4.388, 4.99, 8.99278, 4.818), box(3.27, 3.83278, 5.42, 3.7, 8.99278, 5.85), box(10.15, 3.83278, 3.528, 10.58, 8.99278, 3.958), box(4.99, 3.83278, 3.958, 5.42, 8.99278, 4.388),
					box(10.15, 3.83285, 12.214, 10.58, 8.99285, 12.644), box(9.72, 3.83285, 12.644, 10.15, 8.99285, 13.074), box(5.85, 3.83285, 12.644, 6.28, 8.99285, 13.074), box(11.44, 3.83278, 4.818, 11.87, 8.99278, 5.248),
					box(2.84, 3.83278, 9.72, 3.27, 8.99278, 10.15), box(10.58, 3.83278, 3.958, 11.01, 8.99278, 4.388), box(4.99, 3.83285, 11.784, 5.42, 8.99285, 12.214), box(12.472, 3.83278, 5.85, 12.902, 8.99278, 6.28),
					box(5.42, 3.83285, 12.214, 5.85, 8.99285, 12.644), box(12.042, 3.83278, 10.15, 12.472, 8.99278, 10.58), box(5.42, 3.83278, 3.528, 5.85, 8.99278, 3.958), box(11.612, 3.83278, 4.99, 12.042, 8.99278, 5.42),
					box(11.612, 3.83278, 10.58, 12.042, 8.99278, 11.01), box(10.58, 3.83285, 11.784, 11.01, 8.99285, 12.214), box(12.472, 3.83278, 9.72, 12.902, 8.99278, 10.15), box(12.042, 3.83278, 5.42, 12.472, 8.99278, 5.85),
					box(11.01, 3.83278, 4.388, 11.44, 8.99278, 4.818), box(4.99, 10.30814, 10.92228, 5.42, 15.46814, 11.35228), box(9.72, 10.65214, 11.78228, 10.15, 15.81214, 12.21228), box(5.85, 10.65214, 11.78228, 6.28, 15.81214, 12.21228),
					box(10.15, 10.48014, 11.35228, 10.58, 15.64014, 11.78228), box(11.72014, 10.33568, 9.72, 12.15014, 15.83968, 10.15), box(5.42, 10.48014, 11.35228, 5.85, 15.64014, 11.78228),
					box(11.44, 9.96414, 10.06228, 11.87, 15.12414, 10.49228), box(11.87, 9.79214, 9.63228, 12.3, 14.95214, 10.06228), box(11.01, 10.13614, 10.49228, 11.44, 15.29614, 10.92228), box(10.43015, 9.81968, 11.01, 10.86015, 15.32368, 11.44),
					box(4.13, 9.96414, 10.06228, 4.56, 15.12414, 10.49228), box(3.7, 9.79214, 9.63228, 4.13, 14.95214, 10.06228), box(11.72014, 10.33568, 5.85, 12.15014, 15.83968, 6.28), box(10.58, 10.30814, 10.92228, 11.01, 15.46814, 11.35228),
					box(4.56, 10.13614, 10.49228, 4.99, 15.29614, 10.92228), box(10.86015, 9.99168, 4.99, 11.29015, 15.49568, 5.42), box(11.29015, 10.16368, 5.42, 11.72014, 15.66768, 5.85), box(10.00015, 9.64768, 11.44, 10.43015, 15.15168, 11.87),
					box(9.57015, 9.47568, 11.87, 10.00015, 14.97968, 12.3), box(10.00015, 9.64768, 4.13, 10.43015, 15.15168, 4.56), box(9.57015, 9.47568, 3.7, 10.00015, 14.97968, 4.13), box(10.43015, 9.81968, 4.56, 10.86015, 15.32368, 4.99),
					box(10.86015, 9.99168, 10.58, 11.29015, 15.49568, 11.01), box(11.29015, 10.16368, 10.15, 11.72014, 15.66768, 10.58), box(5.85, 10.65895, 3.84574, 6.28, 15.81895, 4.27574), box(9.72, 10.65895, 3.84574, 10.15, 15.81895, 4.27574),
					box(10.15, 10.48695, 4.27574, 10.58, 15.64695, 4.70574), box(5.42, 10.48695, 4.27574, 5.85, 15.64695, 4.70574), box(10.58, 10.31495, 4.70574, 11.01, 15.47495, 5.13574), box(4.99, 10.31495, 4.70574, 5.42, 15.47495, 5.13574),
					box(11.01, 10.14295, 5.13574, 11.44, 15.30295, 5.56574), box(4.56, 10.14295, 5.13574, 4.99, 15.30295, 5.56574), box(11.44, 9.97095, 5.56574, 11.87, 15.13095, 5.99574), box(11.87, 9.79895, 5.99574, 12.3, 14.95895, 6.42574),
					box(4.13, 9.97095, 5.56574, 4.56, 15.13095, 5.99574), box(3.7, 9.79895, 5.99574, 4.13, 14.95895, 6.42574), box(3.78695, 10.3362, 9.72, 4.21695, 15.8402, 10.15), box(3.78695, 10.3362, 5.85, 4.21695, 15.8402, 6.28),
					box(4.21695, 10.1642, 10.15, 4.64695, 15.6682, 10.58), box(4.21695, 10.1642, 5.42, 4.64695, 15.6682, 5.85), box(4.64695, 9.9922, 4.99, 5.07695, 15.4962, 5.42), box(4.64695, 9.9922, 10.58, 5.07695, 15.4962, 11.01),
					box(5.07695, 9.8202, 11.01, 5.50695, 15.3242, 11.44), box(5.07695, 9.8202, 4.56, 5.50695, 15.3242, 4.99), box(5.50695, 9.6482, 4.13, 5.93695, 15.1522, 4.56), box(5.93695, 9.4762, 3.7, 6.36695, 14.9802, 4.13),
					box(5.50695, 9.6482, 11.44, 5.93695, 15.1522, 11.87), box(5.93695, 9.4762, 11.87, 6.36695, 14.9802, 12.3), box(7.312, 16.168, 8.688, 8.688, 17.2, 9.376), box(7.312, 13.416, 7.312, 8.688, 14.792, 8.688),
					box(6.968, 16.168, 6.968, 7.312, 17.2, 7.312), box(8.688, 16.168, 6.968, 9.032, 17.2, 7.312), box(7.312, 14.792, 7.312, 8.688, 16.168, 8.688), box(7.312, 16.168, 7.312, 8.688, 17.544, 8.688),
					box(7.312, 13.416, 6.28, 8.688, 14.792, 7.312), box(7.312, 16.168, 6.624, 8.688, 17.2, 7.312), box(8.688, 16.512, 7.312, 9.376, 17.2, 8.688), box(7.312, 14.104, 8.688, 8.688, 15.136, 9.376),
					box(6.968, 16.168, 8.688, 7.312, 17.2, 9.032), box(7.312, 13.416, 8.688, 8.688, 14.792, 9.72), box(6.624, 16.512, 7.312, 7.312, 17.2, 8.688), box(7.312, 14.104, 6.624, 8.688, 15.136, 7.312),
					box(7.312, 13.416, 9.032, 8.688, 14.448, 10.064), box(7.312, 14.448, 6.968, 8.688, 15.48, 7.312), box(7.312, 13.416, 5.936, 8.688, 14.448, 6.968), box(7.312, 14.448, 8.688, 8.688, 15.48, 9.032),
					box(8.688, 16.168, 8.688, 9.032, 17.2, 9.032), box(10.58, 13.33, 1.98, 11.01, 14.19, 14.02), box(10.15, 13.33, 1.55, 10.58, 14.19, 14.45), box(6.28, 13.33, 0.69, 9.72, 14.19, 15.31), box(9.72, 13.33, 1.12, 10.15, 14.19, 14.88),
					box(4.13, 13.33, 2.84, 4.56, 14.19, 13.16), box(11.01, 13.33, 2.41, 11.44, 14.19, 13.59), box(4.56, 13.33, 2.41, 4.99, 14.19, 13.59), box(11.44, 13.33, 2.84, 11.87, 14.19, 13.16), box(1.12, 13.33, 5.85, 14.88, 14.19, 6.28),
					box(1.55, 13.33, 10.15, 14.45, 14.19, 10.58), box(11.87, 13.33, 3.27, 12.3, 14.19, 12.73), box(1.12, 13.33, 9.72, 14.88, 14.19, 10.15), box(2.84, 13.33, 4.13, 13.16, 14.19, 4.56), box(5.42, 13.33, 1.55, 5.85, 14.19, 14.45),
					box(3.7, 13.33, 3.27, 4.13, 14.19, 12.73), box(2.84, 13.33, 11.44, 13.16, 14.19, 11.87), box(1.98, 13.33, 4.99, 14.02, 14.19, 5.42), box(1.98, 13.33, 10.58, 14.02, 14.19, 11.01), box(2.41, 13.33, 11.01, 13.59, 14.19, 11.44),
					box(3.27, 13.33, 3.7, 12.73, 14.19, 4.13), box(2.41, 13.33, 4.56, 13.59, 14.19, 4.99), box(3.27, 13.33, 11.6464, 12.73, 14.19, 12.0764), box(1.55, 13.33, 5.42, 14.45, 14.19, 5.85), box(4.99, 13.33, 1.98, 5.42, 14.19, 14.02),
					box(5.85, 13.33, 1.12, 6.28, 14.19, 14.88), box(0.69, 13.33, 6.28, 15.31, 14.19, 9.72));
		};
	}

	@Override
	protected void createBlockStateDefinition(StateDefinition.Builder<Block, BlockState> builder) {
		builder.add(FACING);
	}

	@Override
	public BlockState getStateForPlacement(BlockPlaceContext context) {
		return this.defaultBlockState().setValue(FACING, context.getHorizontalDirection().getOpposite());
	}

	public BlockState rotate(BlockState state, Rotation rot) {
		return state.setValue(FACING, rot.rotate(state.getValue(FACING)));
	}

	public BlockState mirror(BlockState state, Mirror mirrorIn) {
		return state.rotate(mirrorIn.getRotation(state.getValue(FACING)));
	}

	@Override
	public boolean canHarvestBlock(BlockState state, BlockGetter world, BlockPos pos, Player player) {
		if (player.getInventory().getSelected().getItem() instanceof PickaxeItem tieredItem)
			return tieredItem.getTier().getLevel() >= 2;
		return false;
	}

	@Override
	public List<ItemStack> getDrops(BlockState state, LootContext.Builder builder) {
		List<ItemStack> dropsOriginal = super.getDrops(state, builder);
		if (!dropsOriginal.isEmpty())
			return dropsOriginal;
		return Collections.singletonList(new ItemStack(this, 1));
	}

	@Override
	public void onPlace(BlockState blockstate, Level world, BlockPos pos, BlockState oldState, boolean moving) {
		super.onPlace(blockstate, world, pos, oldState, moving);
		world.scheduleTick(pos, this, 10);
	}

	@Override
	public void tick(BlockState blockstate, ServerLevel world, BlockPos pos, RandomSource random) {
		super.tick(blockstate, world, pos, random);
		int x = pos.getX();
		int y = pos.getY();
		int z = pos.getZ();
		CrusherT1procedureProcedure.execute(world, x, y, z);
		world.scheduleTick(pos, this, 10);
	}

	@Override
	public InteractionResult use(BlockState blockstate, Level world, BlockPos pos, Player entity, InteractionHand hand, BlockHitResult hit) {
		super.use(blockstate, world, pos, entity, hand, hit);
		if (entity instanceof ServerPlayer player) {
			NetworkHooks.openScreen(player, new MenuProvider() {
				@Override
				public Component getDisplayName() {
					return Component.literal("Crusher T1");
				}

				@Override
				public AbstractContainerMenu createMenu(int id, Inventory inventory, Player player) {
					return new CrusherT1GUIMenu(id, inventory, new FriendlyByteBuf(Unpooled.buffer()).writeBlockPos(pos));
				}
			}, pos);
		}
		return InteractionResult.SUCCESS;
	}

	@Override
	public MenuProvider getMenuProvider(BlockState state, Level worldIn, BlockPos pos) {
		BlockEntity tileEntity = worldIn.getBlockEntity(pos);
		return tileEntity instanceof MenuProvider menuProvider ? menuProvider : null;
	}

	@Override
	public BlockEntity newBlockEntity(BlockPos pos, BlockState state) {
		return new CrushermachineBlockEntity(pos, state);
	}

	@Override
	public boolean triggerEvent(BlockState state, Level world, BlockPos pos, int eventID, int eventParam) {
		super.triggerEvent(state, world, pos, eventID, eventParam);
		BlockEntity blockEntity = world.getBlockEntity(pos);
		return blockEntity == null ? false : blockEntity.triggerEvent(eventID, eventParam);
	}

	@Override
	public void onRemove(BlockState state, Level world, BlockPos pos, BlockState newState, boolean isMoving) {
		if (state.getBlock() != newState.getBlock()) {
			BlockEntity blockEntity = world.getBlockEntity(pos);
			if (blockEntity instanceof CrushermachineBlockEntity be) {
				Containers.dropContents(world, pos, be);
				world.updateNeighbourForOutputSignal(pos, this);
			}
			super.onRemove(state, world, pos, newState, isMoving);
		}
	}

	@Override
	public boolean hasAnalogOutputSignal(BlockState state) {
		return true;
	}

	@Override
	public int getAnalogOutputSignal(BlockState blockState, Level world, BlockPos pos) {
		BlockEntity tileentity = world.getBlockEntity(pos);
		if (tileentity instanceof CrushermachineBlockEntity be)
			return AbstractContainerMenu.getRedstoneSignalFromContainer(be);
		else
			return 0;
	}
}
