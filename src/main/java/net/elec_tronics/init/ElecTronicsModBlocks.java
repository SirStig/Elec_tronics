
/*
 *    MCreator note: This file will be REGENERATED on each build.
 */
package net.elec_tronics.init;

import net.minecraftforge.fml.event.lifecycle.FMLClientSetupEvent;
import net.minecraftforge.fml.common.Mod;
import net.minecraftforge.eventbus.api.SubscribeEvent;
import net.minecraftforge.event.RegistryEvent;
import net.minecraftforge.api.distmarker.Dist;

import net.minecraft.world.level.block.Block;

import net.elec_tronics.block.WaterturbinemachineBlock;
import net.elec_tronics.block.UraniumoreBlock;
import net.elec_tronics.block.TungstenBlock;
import net.elec_tronics.block.Tankfullhalf1Block;
import net.elec_tronics.block.Tankfull9Block;
import net.elec_tronics.block.Tankfull8Block;
import net.elec_tronics.block.Tankfull7Block;
import net.elec_tronics.block.Tankfull6Block;
import net.elec_tronics.block.Tankfull5Block;
import net.elec_tronics.block.Tankfull4Block;
import net.elec_tronics.block.Tankfull3Block;
import net.elec_tronics.block.Tankfull2Block;
import net.elec_tronics.block.Tankfull1Block;
import net.elec_tronics.block.Tankfull14Block;
import net.elec_tronics.block.Tankfull13Block;
import net.elec_tronics.block.Tankfull12Block;
import net.elec_tronics.block.Tankfull11Block;
import net.elec_tronics.block.Tankfull10Block;
import net.elec_tronics.block.TankBlock;
import net.elec_tronics.block.T1WireBlock;
import net.elec_tronics.block.SolarpaneltoprBlock;
import net.elec_tronics.block.SolarpaneltopBlock;
import net.elec_tronics.block.SolarPanelrBlock;
import net.elec_tronics.block.SolarPanelT1Block;
import net.elec_tronics.block.ReinforcedblastbrickBlock;
import net.elec_tronics.block.PipeupangleBlock;
import net.elec_tronics.block.PipeupBlock;
import net.elec_tronics.block.PipetdownandupBlock;
import net.elec_tronics.block.PipetdownBlock;
import net.elec_tronics.block.PipetBlock;
import net.elec_tronics.block.PipestraightBlock;
import net.elec_tronics.block.PipejunctionupanddownstraightBlock;
import net.elec_tronics.block.PipejunctionupanddownBlock;
import net.elec_tronics.block.Pipejunctionupanddown2Block;
import net.elec_tronics.block.PipejunctionupBlock;
import net.elec_tronics.block.Pipejunctionup2Block;
import net.elec_tronics.block.PipejunctionmainBlock;
import net.elec_tronics.block.PipejunctiondownBlock;
import net.elec_tronics.block.Pipejunctiondown2Block;
import net.elec_tronics.block.PipejunctionBlock;
import net.elec_tronics.block.PipehalfBlock;
import net.elec_tronics.block.PipedownangleBlock;
import net.elec_tronics.block.PipeanlgeupBlock;
import net.elec_tronics.block.PipeangledownBlock;
import net.elec_tronics.block.PipeangleBlock;
import net.elec_tronics.block.ManualFluidPumpdown2Block;
import net.elec_tronics.block.ManualFluidPumpBlock;
import net.elec_tronics.block.ManualFluidPump5Block;
import net.elec_tronics.block.ManualFluidPump4Block;
import net.elec_tronics.block.ManualFluidPump3Block;
import net.elec_tronics.block.ExtrusionMachineBlock;
import net.elec_tronics.block.EngineersworkbenchBlock;
import net.elec_tronics.block.EngineersWorkBenchTopSideBlock;
import net.elec_tronics.block.EngineersWorkBenchTopBlock;
import net.elec_tronics.block.EngineersWorkBenchSideBlock;
import net.elec_tronics.block.EnergyStorageT1Block;
import net.elec_tronics.block.ElectronicsoilBlock;
import net.elec_tronics.block.CrushermachineBlock;
import net.elec_tronics.block.CoalgeneratormachineBlock;
import net.elec_tronics.block.CablehalfT1Block;
import net.elec_tronics.block.CableTUpandDownT1Block;
import net.elec_tronics.block.CableTUpT1Block;
import net.elec_tronics.block.CableTT1Block;
import net.elec_tronics.block.CableTDownT1Block;
import net.elec_tronics.block.CableJunctionUpandDownT1Block;
import net.elec_tronics.block.CableJunctionUpT1Block;
import net.elec_tronics.block.CableJunctionT1Block;
import net.elec_tronics.block.CableJunctionDownT1Block;
import net.elec_tronics.block.CableAngleT1Block;
import net.elec_tronics.block.BlastfurnancemachineBlock;
import net.elec_tronics.block.Basewirecon5mainBlock;
import net.elec_tronics.block.Basewirecon5downBlock;
import net.elec_tronics.block.Basewirecon4upanddownstraightBlock;
import net.elec_tronics.block.Basewirecon4upanddownBlock;
import net.elec_tronics.block.Basewirecon4upBlock;
import net.elec_tronics.block.Basewirecon4downBlock;
import net.elec_tronics.block.Basewirecon3upangleBlock;
import net.elec_tronics.block.Basewirecon3upBlock;
import net.elec_tronics.block.Basewirecon3downangleBlock;
import net.elec_tronics.block.Basewirecon3downandupBlock;
import net.elec_tronics.block.Basewirecon3downBlock;
import net.elec_tronics.block.Basewirecon3Block;
import net.elec_tronics.block.Basewirecon2angleupBlock;
import net.elec_tronics.block.Basewirecon2angledownBlock;
import net.elec_tronics.block.Basewirecon2angleBlock;
import net.elec_tronics.block.BasepipeBlock;
import net.elec_tronics.block.BasecableT1Block;

import java.util.List;
import java.util.ArrayList;

@Mod.EventBusSubscriber(bus = Mod.EventBusSubscriber.Bus.MOD)
public class ElecTronicsModBlocks {
	private static final List<Block> REGISTRY = new ArrayList<>();
	public static final Block URANIUMORE = register(new UraniumoreBlock());
	public static final Block TUNGSTEN = register(new TungstenBlock());
	public static final Block REINFORCEDBLASTBRICK = register(new ReinforcedblastbrickBlock());
	public static final Block BLASTFURNANCEMACHINE = register(new BlastfurnancemachineBlock());
	public static final Block ENGINEERSWORKBENCH = register(new EngineersworkbenchBlock());
	public static final Block WATERTURBINEMACHINE = register(new WaterturbinemachineBlock());
	public static final Block COALGENERATORMACHINE = register(new CoalgeneratormachineBlock());
	public static final Block CRUSHERMACHINE = register(new CrushermachineBlock());
	public static final Block T_1_WIRE = register(new T1WireBlock());
	public static final Block CABLE_TT_1 = register(new CableTT1Block());
	public static final Block CABLE_JUNCTION_T_1 = register(new CableJunctionT1Block());
	public static final Block CABLE_ANGLE_T_1 = register(new CableAngleT1Block());
	public static final Block ENGINEERS_WORK_BENCH_SIDE = register(new EngineersWorkBenchSideBlock());
	public static final Block ENGINEERS_WORK_BENCH_TOP = register(new EngineersWorkBenchTopBlock());
	public static final Block ENGINEERS_WORK_BENCH_TOP_SIDE = register(new EngineersWorkBenchTopSideBlock());
	public static final Block CABLE_T_UP_T_1 = register(new CableTUpT1Block());
	public static final Block CABLE_T_DOWN_T_1 = register(new CableTDownT1Block());
	public static final Block CABLE_T_UPAND_DOWN_T_1 = register(new CableTUpandDownT1Block());
	public static final Block CABLE_JUNCTION_UP_T_1 = register(new CableJunctionUpT1Block());
	public static final Block CABLE_JUNCTION_DOWN_T_1 = register(new CableJunctionDownT1Block());
	public static final Block CABLE_JUNCTION_UPAND_DOWN_T_1 = register(new CableJunctionUpandDownT1Block());
	public static final Block BASECABLE_T_1 = register(new BasecableT1Block());
	public static final Block CABLEHALF_T_1 = register(new CablehalfT1Block());
	public static final Block BASEWIRECON_2ANGLE = register(new Basewirecon2angleBlock());
	public static final Block BASEWIRECON_2ANGLEDOWN = register(new Basewirecon2angledownBlock());
	public static final Block BASEWIRECON_2ANGLEUP = register(new Basewirecon2angleupBlock());
	public static final Block BASEWIRECON_3 = register(new Basewirecon3Block());
	public static final Block BASEWIRECON_3DOWN = register(new Basewirecon3downBlock());
	public static final Block BASEWIRECON_3DOWNANDUP = register(new Basewirecon3downandupBlock());
	public static final Block BASEWIRECON_3DOWNANGLE = register(new Basewirecon3downangleBlock());
	public static final Block BASEWIRECON_3UP = register(new Basewirecon3upBlock());
	public static final Block BASEWIRECON_3UPANGLE = register(new Basewirecon3upangleBlock());
	public static final Block BASEWIRECON_4DOWN = register(new Basewirecon4downBlock());
	public static final Block BASEWIRECON_4UP = register(new Basewirecon4upBlock());
	public static final Block BASEWIRECON_4UPANDDOWN = register(new Basewirecon4upanddownBlock());
	public static final Block BASEWIRECON_4UPANDDOWNSTRAIGHT = register(new Basewirecon4upanddownstraightBlock());
	public static final Block BASEWIRECON_5DOWN = register(new Basewirecon5downBlock());
	public static final Block BASEWIRECON_5MAIN = register(new Basewirecon5mainBlock());
	public static final Block SOLAR_PANEL_T_1 = register(new SolarPanelT1Block());
	public static final Block SOLAR_PANELR = register(new SolarPanelrBlock());
	public static final Block SOLARPANELTOP = register(new SolarpaneltopBlock());
	public static final Block SOLARPANELTOPR = register(new SolarpaneltoprBlock());
	public static final Block EXTRUSION_MACHINE = register(new ExtrusionMachineBlock());
	public static final Block ENERGY_STORAGE_T_1 = register(new EnergyStorageT1Block());
	public static final Block BASEPIPE = register(new BasepipeBlock());
	public static final Block PIPEANGLE = register(new PipeangleBlock());
	public static final Block PIPEANGLEDOWN = register(new PipeangledownBlock());
	public static final Block PIPEANLGEUP = register(new PipeanlgeupBlock());
	public static final Block PIPEDOWNANGLE = register(new PipedownangleBlock());
	public static final Block PIPEHALF = register(new PipehalfBlock());
	public static final Block PIPEJUNCTION = register(new PipejunctionBlock());
	public static final Block PIPEJUNCTIONDOWN = register(new PipejunctiondownBlock());
	public static final Block PIPEJUNCTIONDOWN_2 = register(new Pipejunctiondown2Block());
	public static final Block PIPEJUNCTIONMAIN = register(new PipejunctionmainBlock());
	public static final Block PIPEJUNCTIONUP = register(new PipejunctionupBlock());
	public static final Block PIPEJUNCTIONUP_2 = register(new Pipejunctionup2Block());
	public static final Block PIPEJUNCTIONUPANDDOWN = register(new PipejunctionupanddownBlock());
	public static final Block PIPEJUNCTIONUPANDDOWN_2 = register(new Pipejunctionupanddown2Block());
	public static final Block PIPEJUNCTIONUPANDDOWNSTRAIGHT = register(new PipejunctionupanddownstraightBlock());
	public static final Block PIPESTRAIGHT = register(new PipestraightBlock());
	public static final Block PIPET = register(new PipetBlock());
	public static final Block PIPETDOWN = register(new PipetdownBlock());
	public static final Block PIPETDOWNANDUP = register(new PipetdownandupBlock());
	public static final Block PIPEUP = register(new PipeupBlock());
	public static final Block PIPEUPANGLE = register(new PipeupangleBlock());
	public static final Block TANK = register(new TankBlock());
	public static final Block TANKFULL_1 = register(new Tankfull1Block());
	public static final Block TANKFULL_2 = register(new Tankfull2Block());
	public static final Block TANKFULL_3 = register(new Tankfull3Block());
	public static final Block TANKFULL_4 = register(new Tankfull4Block());
	public static final Block TANKFULL_5 = register(new Tankfull5Block());
	public static final Block TANKFULL_6 = register(new Tankfull6Block());
	public static final Block TANKFULL_7 = register(new Tankfull7Block());
	public static final Block TANKFULL_8 = register(new Tankfull8Block());
	public static final Block TANKFULL_9 = register(new Tankfull9Block());
	public static final Block TANKFULL_10 = register(new Tankfull10Block());
	public static final Block TANKFULL_11 = register(new Tankfull11Block());
	public static final Block TANKFULL_12 = register(new Tankfull12Block());
	public static final Block TANKFULL_13 = register(new Tankfull13Block());
	public static final Block TANKFULL_14 = register(new Tankfull14Block());
	public static final Block ELECTRONICSOIL = register(new ElectronicsoilBlock());
	public static final Block MANUAL_FLUID_PUMP = register(new ManualFluidPumpBlock());
	public static final Block MANUAL_FLUID_PUMPDOWN_2 = register(new ManualFluidPumpdown2Block());
	public static final Block MANUAL_FLUID_PUMP_3 = register(new ManualFluidPump3Block());
	public static final Block MANUAL_FLUID_PUMP_4 = register(new ManualFluidPump4Block());
	public static final Block MANUAL_FLUID_PUMP_5 = register(new ManualFluidPump5Block());
	public static final Block TANKFULLHALF_1 = register(new Tankfullhalf1Block());

	private static Block register(Block block) {
		REGISTRY.add(block);
		return block;
	}

	@SubscribeEvent
	public static void registerBlocks(RegistryEvent.Register<Block> event) {
		event.getRegistry().registerAll(REGISTRY.toArray(new Block[0]));
	}

	@Mod.EventBusSubscriber(bus = Mod.EventBusSubscriber.Bus.MOD, value = Dist.CLIENT)
	public static class ClientSideHandler {
		@SubscribeEvent
		public static void clientSetup(FMLClientSetupEvent event) {
			EngineersworkbenchBlock.registerRenderLayer();
			CrushermachineBlock.registerRenderLayer();
			T1WireBlock.registerRenderLayer();
			CableTT1Block.registerRenderLayer();
			CableJunctionT1Block.registerRenderLayer();
			CableAngleT1Block.registerRenderLayer();
			EngineersWorkBenchSideBlock.registerRenderLayer();
			EngineersWorkBenchTopBlock.registerRenderLayer();
			EngineersWorkBenchTopSideBlock.registerRenderLayer();
			CableTUpT1Block.registerRenderLayer();
			CableTDownT1Block.registerRenderLayer();
			CableTUpandDownT1Block.registerRenderLayer();
			CableJunctionUpT1Block.registerRenderLayer();
			CableJunctionDownT1Block.registerRenderLayer();
			CableJunctionUpandDownT1Block.registerRenderLayer();
			BasecableT1Block.registerRenderLayer();
			CablehalfT1Block.registerRenderLayer();
			Basewirecon2angleBlock.registerRenderLayer();
			Basewirecon2angledownBlock.registerRenderLayer();
			Basewirecon2angleupBlock.registerRenderLayer();
			Basewirecon3Block.registerRenderLayer();
			Basewirecon3downBlock.registerRenderLayer();
			Basewirecon3downandupBlock.registerRenderLayer();
			Basewirecon3downangleBlock.registerRenderLayer();
			Basewirecon3upBlock.registerRenderLayer();
			Basewirecon3upangleBlock.registerRenderLayer();
			Basewirecon4downBlock.registerRenderLayer();
			Basewirecon4upBlock.registerRenderLayer();
			Basewirecon4upanddownBlock.registerRenderLayer();
			Basewirecon4upanddownstraightBlock.registerRenderLayer();
			Basewirecon5downBlock.registerRenderLayer();
			Basewirecon5mainBlock.registerRenderLayer();
			SolarPanelT1Block.registerRenderLayer();
			SolarPanelrBlock.registerRenderLayer();
			SolarpaneltopBlock.registerRenderLayer();
			SolarpaneltoprBlock.registerRenderLayer();
			BasepipeBlock.registerRenderLayer();
			PipeangleBlock.registerRenderLayer();
			PipeangledownBlock.registerRenderLayer();
			PipeanlgeupBlock.registerRenderLayer();
			PipedownangleBlock.registerRenderLayer();
			PipehalfBlock.registerRenderLayer();
			PipejunctionBlock.registerRenderLayer();
			PipejunctiondownBlock.registerRenderLayer();
			Pipejunctiondown2Block.registerRenderLayer();
			PipejunctionmainBlock.registerRenderLayer();
			PipejunctionupBlock.registerRenderLayer();
			Pipejunctionup2Block.registerRenderLayer();
			PipejunctionupanddownBlock.registerRenderLayer();
			Pipejunctionupanddown2Block.registerRenderLayer();
			PipejunctionupanddownstraightBlock.registerRenderLayer();
			PipestraightBlock.registerRenderLayer();
			PipetBlock.registerRenderLayer();
			PipetdownBlock.registerRenderLayer();
			PipetdownandupBlock.registerRenderLayer();
			PipeupBlock.registerRenderLayer();
			PipeupangleBlock.registerRenderLayer();
			TankBlock.registerRenderLayer();
			Tankfull1Block.registerRenderLayer();
			Tankfull2Block.registerRenderLayer();
			Tankfull3Block.registerRenderLayer();
			Tankfull4Block.registerRenderLayer();
			Tankfull5Block.registerRenderLayer();
			Tankfull6Block.registerRenderLayer();
			Tankfull7Block.registerRenderLayer();
			Tankfull8Block.registerRenderLayer();
			Tankfull9Block.registerRenderLayer();
			Tankfull10Block.registerRenderLayer();
			Tankfull11Block.registerRenderLayer();
			Tankfull12Block.registerRenderLayer();
			Tankfull13Block.registerRenderLayer();
			Tankfull14Block.registerRenderLayer();
			ManualFluidPumpBlock.registerRenderLayer();
			ManualFluidPumpdown2Block.registerRenderLayer();
			ManualFluidPump3Block.registerRenderLayer();
			ManualFluidPump4Block.registerRenderLayer();
			ManualFluidPump5Block.registerRenderLayer();
			Tankfullhalf1Block.registerRenderLayer();
		}
	}
}
