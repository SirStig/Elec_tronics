
/*
 *    MCreator note: This file will be REGENERATED on each build.
 */
package net.elec_tronics.init;

import net.minecraftforge.registries.RegistryObject;
import net.minecraftforge.registries.ForgeRegistries;
import net.minecraftforge.registries.DeferredRegister;

import net.minecraft.world.level.block.Block;
import net.minecraft.world.item.Item;
import net.minecraft.world.item.BlockItem;

import net.elec_tronics.item.WireRollerItem;
import net.elec_tronics.item.UraniumIngotItem;
import net.elec_tronics.item.UraniumDustItem;
import net.elec_tronics.item.TurbineItem;
import net.elec_tronics.item.TungstenOreItem;
import net.elec_tronics.item.TungstenIngotItem;
import net.elec_tronics.item.TungstenDustItem;
import net.elec_tronics.item.SteelswordItem;
import net.elec_tronics.item.SteelshovelItem;
import net.elec_tronics.item.SteelpickaxeItem;
import net.elec_tronics.item.SteelingotItem;
import net.elec_tronics.item.SteelhoeItem;
import net.elec_tronics.item.SteelaxeItem;
import net.elec_tronics.item.SteelArmorItem;
import net.elec_tronics.item.SolarPanelItem;
import net.elec_tronics.item.SharpenedironItem;
import net.elec_tronics.item.ScrewdriverItem;
import net.elec_tronics.item.RubbersleeveItem;
import net.elec_tronics.item.RubberItem;
import net.elec_tronics.item.RocksaltdustItem;
import net.elec_tronics.item.QuartzDustItem;
import net.elec_tronics.item.OreFunnelItem;
import net.elec_tronics.item.IrongearItem;
import net.elec_tronics.item.IrondustItem;
import net.elec_tronics.item.IronWrenchItem;
import net.elec_tronics.item.InsulationItem;
import net.elec_tronics.item.HandSawItem;
import net.elec_tronics.item.HammerItem;
import net.elec_tronics.item.GrinderItem;
import net.elec_tronics.item.GoldDustItem;
import net.elec_tronics.item.GeneratorItem;
import net.elec_tronics.item.FibgerGlassDustItem;
import net.elec_tronics.item.EmeraldDustItem;
import net.elec_tronics.item.ElectronicsoilItem;
import net.elec_tronics.item.ElectricmotorItem;
import net.elec_tronics.item.DiamondDustItem;
import net.elec_tronics.item.CreativefluiddropperItem;
import net.elec_tronics.item.CopperwireItem;
import net.elec_tronics.item.CopperSheetItem;
import net.elec_tronics.item.CopperDustItem;
import net.elec_tronics.item.CoolingTowerItem;
import net.elec_tronics.item.CondensorItem;
import net.elec_tronics.item.BrineItem;
import net.elec_tronics.item.BauxiteIngotItem;
import net.elec_tronics.item.AshItem;
import net.elec_tronics.ElecTronicsMod;

public class ElecTronicsModItems {
	public static final DeferredRegister<Item> REGISTRY = DeferredRegister.create(ForgeRegistries.ITEMS, ElecTronicsMod.MODID);
	public static final RegistryObject<Item> URANIUM_INGOT = REGISTRY.register("uranium_ingot", () -> new UraniumIngotItem());
	public static final RegistryObject<Item> URANIUMORE = block(ElecTronicsModBlocks.URANIUMORE);
	public static final RegistryObject<Item> URANIUM_DUST = REGISTRY.register("uranium_dust", () -> new UraniumDustItem());
	public static final RegistryObject<Item> TUNGSTEN = block(ElecTronicsModBlocks.TUNGSTEN);
	public static final RegistryObject<Item> TUNGSTEN_ORE = REGISTRY.register("tungsten_ore", () -> new TungstenOreItem());
	public static final RegistryObject<Item> TUNGSTEN_INGOT = REGISTRY.register("tungsten_ingot", () -> new TungstenIngotItem());
	public static final RegistryObject<Item> REINFORCEDBLASTBRICK = block(ElecTronicsModBlocks.REINFORCEDBLASTBRICK);
	public static final RegistryObject<Item> INSULATION = REGISTRY.register("insulation", () -> new InsulationItem());
	public static final RegistryObject<Item> BLASTFURNANCEMACHINE = block(ElecTronicsModBlocks.BLASTFURNANCEMACHINE);
	public static final RegistryObject<Item> FIBGER_GLASS_DUST = REGISTRY.register("fibger_glass_dust", () -> new FibgerGlassDustItem());
	public static final RegistryObject<Item> STEELINGOT = REGISTRY.register("steelingot", () -> new SteelingotItem());
	public static final RegistryObject<Item> ENGINEERSWORKBENCH = block(ElecTronicsModBlocks.ENGINEERSWORKBENCH);
	public static final RegistryObject<Item> STEELPICKAXE = REGISTRY.register("steelpickaxe", () -> new SteelpickaxeItem());
	public static final RegistryObject<Item> STEELSWORD = REGISTRY.register("steelsword", () -> new SteelswordItem());
	public static final RegistryObject<Item> STEELSHOVEL = REGISTRY.register("steelshovel", () -> new SteelshovelItem());
	public static final RegistryObject<Item> STEELAXE = REGISTRY.register("steelaxe", () -> new SteelaxeItem());
	public static final RegistryObject<Item> STEELHOE = REGISTRY.register("steelhoe", () -> new SteelhoeItem());
	public static final RegistryObject<Item> HAND_SAW = REGISTRY.register("hand_saw", () -> new HandSawItem());
	public static final RegistryObject<Item> SCREWDRIVER = REGISTRY.register("screwdriver", () -> new ScrewdriverItem());
	public static final RegistryObject<Item> HAMMER = REGISTRY.register("hammer", () -> new HammerItem());
	public static final RegistryObject<Item> SHARPENEDIRON = REGISTRY.register("sharpenediron", () -> new SharpenedironItem());
	public static final RegistryObject<Item> WATERTURBINEMACHINE = block(ElecTronicsModBlocks.WATERTURBINEMACHINE);
	public static final RegistryObject<Item> ASH = REGISTRY.register("ash", () -> new AshItem());
	public static final RegistryObject<Item> CRUSHERMACHINE = block(ElecTronicsModBlocks.CRUSHERMACHINE);
	public static final RegistryObject<Item> IRONDUST = REGISTRY.register("irondust", () -> new IrondustItem());
	public static final RegistryObject<Item> T_1_WIRE = block(ElecTronicsModBlocks.T_1_WIRE);
	public static final RegistryObject<Item> CABLE_TT_1 = block(ElecTronicsModBlocks.CABLE_TT_1);
	public static final RegistryObject<Item> CABLE_JUNCTION_T_1 = block(ElecTronicsModBlocks.CABLE_JUNCTION_T_1);
	public static final RegistryObject<Item> CABLE_ANGLE_T_1 = block(ElecTronicsModBlocks.CABLE_ANGLE_T_1);
	public static final RegistryObject<Item> ENGINEERS_WORK_BENCH_SIDE = block(ElecTronicsModBlocks.ENGINEERS_WORK_BENCH_SIDE);
	public static final RegistryObject<Item> ENGINEERS_WORK_BENCH_TOP = block(ElecTronicsModBlocks.ENGINEERS_WORK_BENCH_TOP);
	public static final RegistryObject<Item> ENGINEERS_WORK_BENCH_TOP_SIDE = block(ElecTronicsModBlocks.ENGINEERS_WORK_BENCH_TOP_SIDE);
	public static final RegistryObject<Item> CABLE_T_UP_T_1 = block(ElecTronicsModBlocks.CABLE_T_UP_T_1);
	public static final RegistryObject<Item> CABLE_T_DOWN_T_1 = block(ElecTronicsModBlocks.CABLE_T_DOWN_T_1);
	public static final RegistryObject<Item> CABLE_T_UPAND_DOWN_T_1 = block(ElecTronicsModBlocks.CABLE_T_UPAND_DOWN_T_1);
	public static final RegistryObject<Item> CABLE_JUNCTION_UP_T_1 = block(ElecTronicsModBlocks.CABLE_JUNCTION_UP_T_1);
	public static final RegistryObject<Item> CABLE_JUNCTION_DOWN_T_1 = block(ElecTronicsModBlocks.CABLE_JUNCTION_DOWN_T_1);
	public static final RegistryObject<Item> CABLE_JUNCTION_UPAND_DOWN_T_1 = block(ElecTronicsModBlocks.CABLE_JUNCTION_UPAND_DOWN_T_1);
	public static final RegistryObject<Item> BASECABLE_T_1 = block(ElecTronicsModBlocks.BASECABLE_T_1);
	public static final RegistryObject<Item> CABLEHALF_T_1 = block(ElecTronicsModBlocks.CABLEHALF_T_1);
	public static final RegistryObject<Item> BASEWIRECON_2ANGLE = block(ElecTronicsModBlocks.BASEWIRECON_2ANGLE);
	public static final RegistryObject<Item> BASEWIRECON_2ANGLEDOWN = block(ElecTronicsModBlocks.BASEWIRECON_2ANGLEDOWN);
	public static final RegistryObject<Item> BASEWIRECON_2ANGLEUP = block(ElecTronicsModBlocks.BASEWIRECON_2ANGLEUP);
	public static final RegistryObject<Item> BASEWIRECON_3 = block(ElecTronicsModBlocks.BASEWIRECON_3);
	public static final RegistryObject<Item> BASEWIRECON_3DOWN = block(ElecTronicsModBlocks.BASEWIRECON_3DOWN);
	public static final RegistryObject<Item> BASEWIRECON_3DOWNANDUP = block(ElecTronicsModBlocks.BASEWIRECON_3DOWNANDUP);
	public static final RegistryObject<Item> BASEWIRECON_3DOWNANGLE = block(ElecTronicsModBlocks.BASEWIRECON_3DOWNANGLE);
	public static final RegistryObject<Item> BASEWIRECON_3UP = block(ElecTronicsModBlocks.BASEWIRECON_3UP);
	public static final RegistryObject<Item> BASEWIRECON_3UPANGLE = block(ElecTronicsModBlocks.BASEWIRECON_3UPANGLE);
	public static final RegistryObject<Item> BASEWIRECON_4DOWN = block(ElecTronicsModBlocks.BASEWIRECON_4DOWN);
	public static final RegistryObject<Item> BASEWIRECON_4UP = block(ElecTronicsModBlocks.BASEWIRECON_4UP);
	public static final RegistryObject<Item> BASEWIRECON_4UPANDDOWN = block(ElecTronicsModBlocks.BASEWIRECON_4UPANDDOWN);
	public static final RegistryObject<Item> BASEWIRECON_4UPANDDOWNSTRAIGHT = block(ElecTronicsModBlocks.BASEWIRECON_4UPANDDOWNSTRAIGHT);
	public static final RegistryObject<Item> BASEWIRECON_5DOWN = block(ElecTronicsModBlocks.BASEWIRECON_5DOWN);
	public static final RegistryObject<Item> BASEWIRECON_5MAIN = block(ElecTronicsModBlocks.BASEWIRECON_5MAIN);
	public static final RegistryObject<Item> SOLAR_PANEL_T_1 = block(ElecTronicsModBlocks.SOLAR_PANEL_T_1);
	public static final RegistryObject<Item> SOLAR_PANELR = block(ElecTronicsModBlocks.SOLAR_PANELR);
	public static final RegistryObject<Item> SOLARPANELTOP = block(ElecTronicsModBlocks.SOLARPANELTOP);
	public static final RegistryObject<Item> SOLARPANELTOPR = block(ElecTronicsModBlocks.SOLARPANELTOPR);
	public static final RegistryObject<Item> TUNGSTEN_DUST = REGISTRY.register("tungsten_dust", () -> new TungstenDustItem());
	public static final RegistryObject<Item> DIAMOND_DUST = REGISTRY.register("diamond_dust", () -> new DiamondDustItem());
	public static final RegistryObject<Item> GOLD_DUST = REGISTRY.register("gold_dust", () -> new GoldDustItem());
	public static final RegistryObject<Item> EMERALD_DUST = REGISTRY.register("emerald_dust", () -> new EmeraldDustItem());
	public static final RegistryObject<Item> COPPER_DUST = REGISTRY.register("copper_dust", () -> new CopperDustItem());
	public static final RegistryObject<Item> QUARTZ_DUST = REGISTRY.register("quartz_dust", () -> new QuartzDustItem());
	public static final RegistryObject<Item> RUBBER = REGISTRY.register("rubber", () -> new RubberItem());
	public static final RegistryObject<Item> COPPERWIRE = REGISTRY.register("copperwire", () -> new CopperwireItem());
	public static final RegistryObject<Item> EXTRUSION_MACHINE = block(ElecTronicsModBlocks.EXTRUSION_MACHINE);
	public static final RegistryObject<Item> RUBBERSLEEVE = REGISTRY.register("rubbersleeve", () -> new RubbersleeveItem());
	public static final RegistryObject<Item> TURBINE = REGISTRY.register("turbine", () -> new TurbineItem());
	public static final RegistryObject<Item> CONDENSOR = REGISTRY.register("condensor", () -> new CondensorItem());
	public static final RegistryObject<Item> COOLING_TOWER = REGISTRY.register("cooling_tower", () -> new CoolingTowerItem());
	public static final RegistryObject<Item> GENERATOR = REGISTRY.register("generator", () -> new GeneratorItem());
	public static final RegistryObject<Item> SOLAR_PANEL = REGISTRY.register("solar_panel", () -> new SolarPanelItem());
	public static final RegistryObject<Item> ENERGY_STORAGE_T_1 = block(ElecTronicsModBlocks.ENERGY_STORAGE_T_1);
	public static final RegistryObject<Item> ELECTRICMOTOR = REGISTRY.register("electricmotor", () -> new ElectricmotorItem());
	public static final RegistryObject<Item> ORE_FUNNEL = REGISTRY.register("ore_funnel", () -> new OreFunnelItem());
	public static final RegistryObject<Item> GRINDER = REGISTRY.register("grinder", () -> new GrinderItem());
	public static final RegistryObject<Item> IRONGEAR = REGISTRY.register("irongear", () -> new IrongearItem());
	public static final RegistryObject<Item> COPPER_SHEET = REGISTRY.register("copper_sheet", () -> new CopperSheetItem());
	public static final RegistryObject<Item> WIRE_ROLLER = REGISTRY.register("wire_roller", () -> new WireRollerItem());
	public static final RegistryObject<Item> BASEPIPE = block(ElecTronicsModBlocks.BASEPIPE);
	public static final RegistryObject<Item> PIPEANGLE = block(ElecTronicsModBlocks.PIPEANGLE);
	public static final RegistryObject<Item> PIPEANGLEDOWN = block(ElecTronicsModBlocks.PIPEANGLEDOWN);
	public static final RegistryObject<Item> PIPEANLGEUP = block(ElecTronicsModBlocks.PIPEANLGEUP);
	public static final RegistryObject<Item> PIPEDOWNANGLE = block(ElecTronicsModBlocks.PIPEDOWNANGLE);
	public static final RegistryObject<Item> PIPEHALF = block(ElecTronicsModBlocks.PIPEHALF);
	public static final RegistryObject<Item> PIPEJUNCTION = block(ElecTronicsModBlocks.PIPEJUNCTION);
	public static final RegistryObject<Item> PIPEJUNCTIONDOWN = block(ElecTronicsModBlocks.PIPEJUNCTIONDOWN);
	public static final RegistryObject<Item> PIPEJUNCTIONDOWN_2 = block(ElecTronicsModBlocks.PIPEJUNCTIONDOWN_2);
	public static final RegistryObject<Item> PIPEJUNCTIONMAIN = block(ElecTronicsModBlocks.PIPEJUNCTIONMAIN);
	public static final RegistryObject<Item> PIPEJUNCTIONUP = block(ElecTronicsModBlocks.PIPEJUNCTIONUP);
	public static final RegistryObject<Item> PIPEJUNCTIONUP_2 = block(ElecTronicsModBlocks.PIPEJUNCTIONUP_2);
	public static final RegistryObject<Item> PIPEJUNCTIONUPANDDOWN = block(ElecTronicsModBlocks.PIPEJUNCTIONUPANDDOWN);
	public static final RegistryObject<Item> PIPEJUNCTIONUPANDDOWN_2 = block(ElecTronicsModBlocks.PIPEJUNCTIONUPANDDOWN_2);
	public static final RegistryObject<Item> PIPEJUNCTIONUPANDDOWNSTRAIGHT = block(ElecTronicsModBlocks.PIPEJUNCTIONUPANDDOWNSTRAIGHT);
	public static final RegistryObject<Item> PIPESTRAIGHT = block(ElecTronicsModBlocks.PIPESTRAIGHT);
	public static final RegistryObject<Item> PIPET = block(ElecTronicsModBlocks.PIPET);
	public static final RegistryObject<Item> PIPETDOWN = block(ElecTronicsModBlocks.PIPETDOWN);
	public static final RegistryObject<Item> PIPETDOWNANDUP = block(ElecTronicsModBlocks.PIPETDOWNANDUP);
	public static final RegistryObject<Item> PIPEUP = block(ElecTronicsModBlocks.PIPEUP);
	public static final RegistryObject<Item> PIPEUPANGLE = block(ElecTronicsModBlocks.PIPEUPANGLE);
	public static final RegistryObject<Item> TANK = block(ElecTronicsModBlocks.TANK);
	public static final RegistryObject<Item> TANKFULL_1 = block(ElecTronicsModBlocks.TANKFULL_1);
	public static final RegistryObject<Item> TANKFULL_2 = block(ElecTronicsModBlocks.TANKFULL_2);
	public static final RegistryObject<Item> TANKFULL_3 = block(ElecTronicsModBlocks.TANKFULL_3);
	public static final RegistryObject<Item> TANKFULL_4 = block(ElecTronicsModBlocks.TANKFULL_4);
	public static final RegistryObject<Item> TANKFULL_5 = block(ElecTronicsModBlocks.TANKFULL_5);
	public static final RegistryObject<Item> TANKFULL_6 = block(ElecTronicsModBlocks.TANKFULL_6);
	public static final RegistryObject<Item> TANKFULL_7 = block(ElecTronicsModBlocks.TANKFULL_7);
	public static final RegistryObject<Item> TANKFULL_8 = block(ElecTronicsModBlocks.TANKFULL_8);
	public static final RegistryObject<Item> TANKFULL_9 = block(ElecTronicsModBlocks.TANKFULL_9);
	public static final RegistryObject<Item> TANKFULL_10 = block(ElecTronicsModBlocks.TANKFULL_10);
	public static final RegistryObject<Item> TANKFULL_11 = block(ElecTronicsModBlocks.TANKFULL_11);
	public static final RegistryObject<Item> TANKFULL_12 = block(ElecTronicsModBlocks.TANKFULL_12);
	public static final RegistryObject<Item> TANKFULL_13 = block(ElecTronicsModBlocks.TANKFULL_13);
	public static final RegistryObject<Item> TANKFULL_14 = block(ElecTronicsModBlocks.TANKFULL_14);
	public static final RegistryObject<Item> ELECTRONICSOIL_BUCKET = REGISTRY.register("electronicsoil_bucket", () -> new ElectronicsoilItem());
	public static final RegistryObject<Item> CREATIVEFLUIDDROPPER = REGISTRY.register("creativefluiddropper", () -> new CreativefluiddropperItem());
	public static final RegistryObject<Item> MANUAL_FLUID_PUMP = block(ElecTronicsModBlocks.MANUAL_FLUID_PUMP);
	public static final RegistryObject<Item> MANUAL_FLUID_PUMPDOWN_2 = block(ElecTronicsModBlocks.MANUAL_FLUID_PUMPDOWN_2);
	public static final RegistryObject<Item> MANUAL_FLUID_PUMP_3 = block(ElecTronicsModBlocks.MANUAL_FLUID_PUMP_3);
	public static final RegistryObject<Item> MANUAL_FLUID_PUMP_4 = block(ElecTronicsModBlocks.MANUAL_FLUID_PUMP_4);
	public static final RegistryObject<Item> MANUAL_FLUID_PUMP_5 = block(ElecTronicsModBlocks.MANUAL_FLUID_PUMP_5);
	public static final RegistryObject<Item> TANKFULLHALF_1 = block(ElecTronicsModBlocks.TANKFULLHALF_1);
	public static final RegistryObject<Item> BAUXITE_INGOT = REGISTRY.register("bauxite_ingot", () -> new BauxiteIngotItem());
	public static final RegistryObject<Item> BAUXITE_ORE = block(ElecTronicsModBlocks.BAUXITE_ORE);
	public static final RegistryObject<Item> BAUXITE_BLOCK = block(ElecTronicsModBlocks.BAUXITE_BLOCK);
	public static final RegistryObject<Item> STEEL_ARMOR_HELMET = REGISTRY.register("steel_armor_helmet", () -> new SteelArmorItem.Helmet());
	public static final RegistryObject<Item> STEEL_ARMOR_CHESTPLATE = REGISTRY.register("steel_armor_chestplate", () -> new SteelArmorItem.Chestplate());
	public static final RegistryObject<Item> STEEL_ARMOR_LEGGINGS = REGISTRY.register("steel_armor_leggings", () -> new SteelArmorItem.Leggings());
	public static final RegistryObject<Item> STEEL_ARMOR_BOOTS = REGISTRY.register("steel_armor_boots", () -> new SteelArmorItem.Boots());
	public static final RegistryObject<Item> BRINE_BUCKET = REGISTRY.register("brine_bucket", () -> new BrineItem());
	public static final RegistryObject<Item> ROCK_SALT = block(ElecTronicsModBlocks.ROCK_SALT);
	public static final RegistryObject<Item> ROCKSALTDUST = REGISTRY.register("rocksaltdust", () -> new RocksaltdustItem());
	public static final RegistryObject<Item> IRON_WRENCH = REGISTRY.register("iron_wrench", () -> new IronWrenchItem());
	public static final RegistryObject<Item> COAL_GENERATOR_MACHINE = block(ElecTronicsModBlocks.COAL_GENERATOR_MACHINE);

	private static RegistryObject<Item> block(RegistryObject<Block> block) {
		return REGISTRY.register(block.getId().getPath(), () -> new BlockItem(block.get(), new Item.Properties()));
	}
}
